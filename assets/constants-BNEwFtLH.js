import{isMobileApp as s}from"./index.web-BqgtOHN3.js";import{createSlice as a}from"./redux-toolkit.esm-BnRUBto_.js";import{config as u}from"./config-C4KrHqHG.js";import{uniswapUrls as R}from"./urls-kwiZbYPW.js";import{REQUEST_SOURCE as d,getVersionHeader as m}from"./constants-D9cStT7K.js";const S={},c=a({name:"fiatOnRampTransactions",initialState:S,reducers:{addFiatOnRampTransaction(n,{payload:t}){var e;if(!((e=n[t.account])===null||e===void 0)&&e[t.externalSessionId])return;const i=n[t.account]??{};i[t.externalSessionId]=t,n[t.account]=i},updateFiatOnRampTransaction(n,{payload:t}){var e;if(!(!((e=n[t.account])===null||e===void 0)&&e[t.externalSessionId]))throw Error("Attempted to update non-existent FOR transaction.");n[t.account][t.externalSessionId]=t},removeFiatOnRampTransaction(n,{payload:t}){n[t.account][t.externalSessionId]&&delete n[t.account][t.externalSessionId]}}}),{addFiatOnRampTransaction:v,updateFiatOnRampTransaction:F,removeFiatOnRampTransaction:f}=c.actions;var x=c.reducer;const g={"Content-Type":"application/json","X-API-KEY":u.uniswapApiKey,"x-request-source":d,...s?{"x-app-version":m()}:{},Origin:R.requestOriginUrl},r=90,o=20,l={icon:{height:r,width:r,borderRadius:o},uniswapLogoWrapper:{backgroundColor:"#FFEFF8",borderRadius:o,height:r,width:r}};export{g as FOR_API_HEADERS,l as ServiceProviderLogoStyles,v as addFiatOnRampTransaction,x as reducer_default,f as removeFiatOnRampTransaction,F as updateFiatOnRampTransaction};
