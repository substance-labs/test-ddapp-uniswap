const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index.es-CRDaA2O6.js","assets/preload-helper-CaakwtpC.js","assets/_u64-b_viZRi_.js","assets/chunk-DgAfPHQg.js","assets/isAddress-P2vaZgmG.js","assets/index.es-2xsffwdf.js","assets/events-Bnkik2bI.js","assets/basics-DA01Pp0C.js","assets/dist-ceZDlR1V.js","assets/dist-Q7olfaoJ.js","assets/dist-QCpUvRkJ.js","assets/index.es-CgD-yfx8.js","assets/esm-DSGHq0HW.js","assets/recoverAddress-oPdWABRo.js"])))=>i.map(i=>d[i]);
import{__toESM as Qe}from"./chunk-DgAfPHQg.js";import{__vitePreload as $e}from"./preload-helper-CaakwtpC.js";import{require_react as et}from"./react-CNoFhWkx.js";import{isExtension as tt,isMobileApp as Ze,isWebAndroid as nt,isWebIOS as st}from"./index.web-BqgtOHN3.js";import{isBetaEnv as rt,isProdEnv as it,logger as w}from"./hooks-BXO4d1DJ.js";import{getAddress as Je,numberToHex as Ye}from"./isAddress-P2vaZgmG.js";import{SwitchChainError as at,UserRejectedRequestError as ke}from"./rpc-nQR4Ijs4.js";import{isAddress as xe}from"./addresses-D56PBUHX.js";import{ProviderNotFoundError as Ke}from"./connector-Cw8HJLtm.js";import{MethodKind as N,createConnectTransport as ot}from"./connect-transport-9OnIgPz5.js";import{Message as l,proto3 as s,protoInt64 as Me}from"./proto3-DkSQZto4.js";import{createPromiseClient as lt}from"./promise-client-BYLTs0DC.js";import{uniswapUrls as Be}from"./urls-kwiZbYPW.js";import{REQUEST_SOURCE as ct,getVersionHeader as ut}from"./constants-D9cStT7K.js";import{ChainNotConfiguredError as dt}from"./config-CDfnfyHL.js";import{Z_INDEX as mt}from"./zIndex-CmEE31Ab.js";import{authenticatePasskey as St,registerPasskey as ft}from"./passkey.web-DakcatU3.js";var ce=class P extends l{constructor(e){super(),this.seconds=Me.zero,this.nanos=0,s.util.initPartial(e,this)}fromJson(e,t){if(typeof e!="string")throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${s.json.debug(e)}`);const i=e.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);if(!i)throw new Error("cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string");const c=Date.parse(i[1]+"-"+i[2]+"-"+i[3]+"T"+i[4]+":"+i[5]+":"+i[6]+(i[8]?i[8]:"Z"));if(Number.isNaN(c))throw new Error("cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string");if(c<Date.parse("0001-01-01T00:00:00Z")||c>Date.parse("9999-12-31T23:59:59Z"))throw new Error("cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive");return this.seconds=Me.parse(c/1e3),this.nanos=0,i[7]&&(this.nanos=parseInt("1"+i[7]+"0".repeat(9-i[7].length))-1e9),this}toJson(e){const t=Number(this.seconds)*1e3;if(t<Date.parse("0001-01-01T00:00:00Z")||t>Date.parse("9999-12-31T23:59:59Z"))throw new Error("cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive");if(this.nanos<0)throw new Error("cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative");let i="Z";if(this.nanos>0){const c=(this.nanos+1e9).toString().substring(1);c.substring(3)==="000000"?i="."+c.substring(0,3)+"Z":c.substring(6)==="000"?i="."+c.substring(0,6)+"Z":i="."+c+"Z"}return new Date(t).toISOString().replace(".000Z",i)}toDate(){return new Date(Number(this.seconds)*1e3+Math.ceil(this.nanos/1e6))}static now(){return P.fromDate(new Date)}static fromDate(e){const t=e.getTime();return new P({seconds:Me.parse(Math.floor(t/1e3)),nanos:t%1e3*1e6})}static fromBinary(e,t){return new P().fromBinary(e,t)}static fromJson(e,t){return new P().fromJson(e,t)}static fromJsonString(e,t){return new P().fromJsonString(e,t)}static equals(e,t){return s.util.equals(P,e,t)}};ce.runtime=s;ce.typeName="google.protobuf.Timestamp";ce.fields=s.util.newFieldList(()=>[{no:1,name:"seconds",kind:"scalar",T:3},{no:2,name:"nanos",kind:"scalar",T:5}]);function $t(n){return n}function Et(n){var e,t,i;const{chain:c}=n,T=c.rpcUrls.default.http[0];if(!n.transports)return[T];const h=(e=n.transports)===null||e===void 0||(t=e[c.id])===null||t===void 0?void 0:t.call(e,{chain:c});return((h==null||(i=h.value)===null||i===void 0?void 0:i.transports)||[h]).map(({value:R})=>(R==null?void 0:R.url)||T)}Ge.type="walletConnect";function Ge(n){const e=n.isNewChainsStale??!0;let t,i;const c="eip155";let T,h,g,R,I,y;return m=>({id:"walletConnect",name:"WalletConnect",type:Ge.type,async setup(){const r=await this.getProvider().catch(()=>null);r&&(g||(g=this.onConnect.bind(this),r.on("connect",g)),I||(I=this.onSessionDelete.bind(this),r.on("session_delete",I)))},async connect({chainId:r,...a}={}){try{const u=await this.getProvider();if(!u)throw new Ke;R||(R=this.onDisplayUri,u.on("display_uri",R));let f=r;if(!f){var E,d;const p=await((E=m.storage)===null||E===void 0?void 0:E.getItem("state"))??{};m.chains.some(qe=>qe.id===p.chainId)?f=p.chainId:f=(d=m.chains[0])===null||d===void 0?void 0:d.id}if(!f)throw new Error("No chains found on connector.");const v=await this.isChainsStale();if(u.session&&v&&await u.disconnect(),!u.session||v){const p=m.chains.filter(A=>A.id!==f).map(A=>A.id);await u.connect({optionalChains:[f,...p],..."pairingTopic"in a?{pairingTopic:a.pairingTopic}:{}}),this.setRequestedChainsIds(m.chains.map(A=>A.id))}const O=(await u.enable()).map(p=>Je(p)),D=await this.getChainId();return R&&(u.removeListener("display_uri",R),R=void 0),g&&(u.removeListener("connect",g),g=void 0),T||(T=this.onAccountsChanged.bind(this),u.on("accountsChanged",T)),h||(h=this.onChainChanged.bind(this),u.on("chainChanged",h)),y||(y=this.onDisconnect.bind(this),u.on("disconnect",y)),I||(I=this.onSessionDelete.bind(this),u.on("session_delete",I)),{accounts:O,chainId:D}}catch(u){throw/(user rejected|connection request reset)/i.test(u==null?void 0:u.message)?new ke(u):u}},async disconnect(){const r=await this.getProvider();try{await(r==null?void 0:r.disconnect())}catch(a){if(!/No matching key/i.test(a.message))throw a}finally{h&&(r==null||r.removeListener("chainChanged",h),h=void 0),y&&(r==null||r.removeListener("disconnect",y),y=void 0),g||(g=this.onConnect.bind(this),r==null||r.on("connect",g)),T&&(r==null||r.removeListener("accountsChanged",T),T=void 0),I&&(r==null||r.removeListener("session_delete",I),I=void 0),this.setRequestedChainsIds([])}},async getAccounts(){return(await this.getProvider()).accounts.map(a=>Je(a))},async getProvider({chainId:r}={}){var a;async function E(){const d=m.chains.map(f=>f.id);if(!d.length)return;const{EthereumProvider:u}=await $e(async()=>{const{EthereumProvider:f}=await import("./index.es-CRDaA2O6.js");return{EthereumProvider:f}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13]));return await u.init({...n,disableProviderPing:!0,optionalChains:d,projectId:n.projectId,rpcMap:Object.fromEntries(m.chains.map(f=>{const[v]=Et({chain:f,transports:m.transports});return[f.id,v]})),showQrModal:n.showQrModal??!0})}return t||(i||(i=E()),t=await i,t==null||t.events.setMaxListeners(Number.POSITIVE_INFINITY)),r&&await((a=this.switchChain)===null||a===void 0?void 0:a.call(this,{chainId:r})),t},async getChainId(){return(await this.getProvider()).chainId},async isAuthorized(){try{const[r,a]=await Promise.all([this.getAccounts(),this.getProvider()]);return r.length?await this.isChainsStale()&&a.session?(await a.disconnect().catch(()=>{}),!1):!0:!1}catch{return!1}},async switchChain({addEthereumChainParameter:r,chainId:a}){const E=await this.getProvider();if(!E)throw new Ke;const d=m.chains.find(O=>O.id===a);if(!d)throw new at(new dt);try{await Promise.all([new Promise(D=>{const p=({chainId:A})=>{A===a&&(m.emitter.off("change",p),D())};m.emitter.on("change",p)}),E.request({method:"wallet_switchEthereumChain",params:[{chainId:Ye(a)}]})]);const O=await this.getRequestedChainsIds();return this.setRequestedChainsIds([...O,a]),d}catch(O){const D=O;if(/(user rejected)/i.test(D.message))throw new ke(D);try{var u,f,v;let p;r!=null&&r.blockExplorerUrls?p=r.blockExplorerUrls:p=!((u=d.blockExplorers)===null||u===void 0)&&u.default.url?[(f=d.blockExplorers)===null||f===void 0?void 0:f.default.url]:[];let A;!(r==null||(v=r.rpcUrls)===null||v===void 0)&&v.length?A=r.rpcUrls:A=[...d.rpcUrls.default.http];const qe={blockExplorerUrls:p,chainId:Ye(a),chainName:(r==null?void 0:r.chainName)??d.name,iconUrls:r==null?void 0:r.iconUrls,nativeCurrency:(r==null?void 0:r.nativeCurrency)??d.nativeCurrency,rpcUrls:A};await E.request({method:"wallet_addEthereumChain",params:[qe]});const ze=await this.getRequestedChainsIds();return this.setRequestedChainsIds([...ze,a]),d}catch(p){throw new ke(p)}}},onAccountsChanged(r){r.length===0?this.onDisconnect():m.emitter.emit("change",{accounts:r.map(a=>Je(a))})},onChainChanged(r){const a=Number(r);m.emitter.emit("change",{chainId:a})},async onConnect(r){const a=Number(r.chainId),E=await this.getAccounts();m.emitter.emit("connect",{accounts:E,chainId:a})},async onDisconnect(r){this.setRequestedChainsIds([]),m.emitter.emit("disconnect");const a=await this.getProvider();T&&(a.removeListener("accountsChanged",T),T=void 0),h&&(a.removeListener("chainChanged",h),h=void 0),y&&(a.removeListener("disconnect",y),y=void 0),I&&(a.removeListener("session_delete",I),I=void 0),g||(g=this.onConnect.bind(this),a.on("connect",g))},onDisplayUri(r){m.emitter.emit("message",{type:"display_uri",data:r})},onSessionDelete(){this.onDisconnect()},getNamespaceChainsIds(){var r;return t?((r=t.session)===null||r===void 0||(r=r.namespaces[c])===null||r===void 0||(r=r.accounts)===null||r===void 0?void 0:r.map(E=>Number.parseInt(E.split(":")[1]||"")))??[]:[]},async getRequestedChainsIds(){var r;return await((r=m.storage)===null||r===void 0?void 0:r.getItem(this.requestedChainsStorageKey))??[]},async isChainsStale(){if(!e)return!1;const r=m.chains.map(d=>d.id),a=this.getNamespaceChainsIds();if(a.length&&!a.some(d=>r.includes(d)))return!1;const E=await this.getRequestedChainsIds();return!r.every(d=>E.includes(d))},async setRequestedChainsIds(r){var a;await((a=m.storage)===null||a===void 0?void 0:a.setItem(this.requestedChainsStorageKey,r))},get requestedChainsStorageKey(){return`${this.id}.requestedChains`}})}const wt="c6c9bacd35afa3eb9e6cccf6d8464395";function en(n){switch(n){case"injected":return"Browser Extension";case"walletConnect":return"Wallet Connect";case"coinbaseWallet":return"Coinbase Wallet";case"uniswapWalletConnect":return"Wallet Connect";case"embeddedUniswapWallet":return"Passkey";default:return n??"Network"}}const pt={projectId:wt,metadata:{name:"Uniswap",description:"Uniswap Interface",url:"https://app.uniswap.org",icons:["https://app.uniswap.org/favicon.png"]},qrModalOptions:{themeVariables:{"--wcm-font-family":'"Inter custom", sans-serif',"--wcm-z-index":mt.modal.toString()}}};function tn(){return n=>{const e=Ge({...pt,showQrModal:!1})(n);return n.emitter.on("message",({type:t,data:i})=>{if(t==="display_uri"){const c=`https://uniswap.org/app/wc?uri=${i}`;window.dispatchEvent(new MessageEvent("display_uniswap_uri",{data:c})),(st||nt)&&(window.location.href=`uniswap://wc?uri=${encodeURIComponent(i)}`)}}),{...e,id:"uniswapWalletConnect",type:"uniswapWalletConnect",name:"Uniswap Wallet",icon:"https://app.uniswap.org/favicon.png"}}}var ht=Qe(et());const gt={walletAddress:null,chainId:null,isConnected:!1},He="embedded-wallet";let se=gt;const Fe=new Set,Ve=()=>se,Tt=n=>(Fe.add(n),()=>Fe.delete(n)),oe=n=>{se={...se,...n},Fe.forEach(e=>e()),localStorage.setItem(He,JSON.stringify(se))};try{const n=localStorage.getItem(He);n&&(se=JSON.parse(n))}catch{w.info("embeddedWallet","store",`No existing embedded wallet state found for key ${He}`)}function nn(){return{...(0,ht.useSyncExternalStore)(Tt,Ve),setWalletAddress:e=>oe({walletAddress:e}),setChainId:e=>oe({chainId:e}),setIsConnected:e=>oe({isConnected:e})}}function sn(){return Ve()}function rn(n){oe({chainId:n})}var o;(function(n){n[n.AUTHENTICATION_TYPE_UNSPECIFIED=0]="AUTHENTICATION_TYPE_UNSPECIFIED",n[n.PASSKEY_REGISTRATION=1]="PASSKEY_REGISTRATION",n[n.PASSKEY_AUTHENTICATION=2]="PASSKEY_AUTHENTICATION",n[n.SIGN_MESSAGE=3]="SIGN_MESSAGE"})(o||(o={}));s.util.setEnumType(o,"uniswap.embeddedwallet.v1.AuthenticationTypes",[{no:0,name:"AUTHENTICATION_TYPE_UNSPECIFIED"},{no:1,name:"PASSKEY_REGISTRATION"},{no:2,name:"PASSKEY_AUTHENTICATION"},{no:3,name:"SIGN_MESSAGE"}]);var S;(function(n){n[n.ACTION_UNSPECIFIED=0]="ACTION_UNSPECIFIED",n[n.CREATE_WALLET=1]="CREATE_WALLET",n[n.SIGN_MESSAGES=2]="SIGN_MESSAGES",n[n.SIGN_TRANSACTIONS=3]="SIGN_TRANSACTIONS",n[n.SIGN_TYPED_DATA_BATCH=4]="SIGN_TYPED_DATA_BATCH",n[n.WALLET_SIGNIN=5]="WALLET_SIGNIN",n[n.EXPORT_SEED_PHRASE=6]="EXPORT_SEED_PHRASE",n[n.DELETE_RECORD=7]="DELETE_RECORD",n[n.REGISTER_NEW_AUTHENTICATION_TYPES=8]="REGISTER_NEW_AUTHENTICATION_TYPES",n[n.LIST_AUTHENTICATORS=9]="LIST_AUTHENTICATORS"})(S||(S={}));s.util.setEnumType(S,"uniswap.embeddedwallet.v1.Action",[{no:0,name:"ACTION_UNSPECIFIED"},{no:1,name:"CREATE_WALLET"},{no:2,name:"SIGN_MESSAGES"},{no:3,name:"SIGN_TRANSACTIONS"},{no:4,name:"SIGN_TYPED_DATA_BATCH"},{no:5,name:"WALLET_SIGNIN"},{no:6,name:"EXPORT_SEED_PHRASE"},{no:7,name:"DELETE_RECORD"},{no:8,name:"REGISTER_NEW_AUTHENTICATION_TYPES"},{no:9,name:"LIST_AUTHENTICATORS"}]);var re;(function(n){n[n.AUTHENTICATOR_NAME_TYPE_UNSPECIFIED=0]="AUTHENTICATOR_NAME_TYPE_UNSPECIFIED",n[n.GOOGLE_PASSWORD_MANAGER=1]="GOOGLE_PASSWORD_MANAGER",n[n.CHROME_MAC=2]="CHROME_MAC",n[n.WINDOWS_HELLO=3]="WINDOWS_HELLO",n[n.ICLOUD_KEYCHAIN_MANAGED=4]="ICLOUD_KEYCHAIN_MANAGED",n[n.DASHLANE=5]="DASHLANE",n[n.ONE_PASSWORD=6]="ONE_PASSWORD",n[n.NORDPASS=7]="NORDPASS",n[n.KEEPER=8]="KEEPER",n[n.SESAME=9]="SESAME",n[n.ENPASS=10]="ENPASS",n[n.CHROMIUM_BROWSER=11]="CHROMIUM_BROWSER",n[n.EDGE_MAC=12]="EDGE_MAC",n[n.IDMELON=13]="IDMELON",n[n.BITWARDEN=14]="BITWARDEN",n[n.ICLOUD_KEYCHAIN=15]="ICLOUD_KEYCHAIN",n[n.SAMSUNG_PASS=16]="SAMSUNG_PASS",n[n.THALES_BIO_IOS_SDK=17]="THALES_BIO_IOS_SDK",n[n.THALES_BIO_ANDROID_SDK=18]="THALES_BIO_ANDROID_SDK",n[n.THALES_PIN_ANDROID_SDK=19]="THALES_PIN_ANDROID_SDK",n[n.THALES_PIN_IOS_SDK=20]="THALES_PIN_IOS_SDK",n[n.PROTON_PASS=21]="PROTON_PASS",n[n.KEEPASSXC=22]="KEEPASSXC",n[n.TOOTHPIC_PASSKEY_PROVIDER=23]="TOOTHPIC_PASSKEY_PROVIDER",n[n.IPASSWORDS=24]="IPASSWORDS",n[n.ZOHO_VAULT=25]="ZOHO_VAULT",n[n.LASTPASS=26]="LASTPASS",n[n.DEVOLUTIONS=27]="DEVOLUTIONS",n[n.LOGMEONCE=28]="LOGMEONCE",n[n.KASPERSKY_PASSWORD_MANAGER=29]="KASPERSKY_PASSWORD_MANAGER"})(re||(re={}));s.util.setEnumType(re,"uniswap.embeddedwallet.v1.AuthenticatorNameType",[{no:0,name:"AUTHENTICATOR_NAME_TYPE_UNSPECIFIED"},{no:1,name:"GOOGLE_PASSWORD_MANAGER"},{no:2,name:"CHROME_MAC"},{no:3,name:"WINDOWS_HELLO"},{no:4,name:"ICLOUD_KEYCHAIN_MANAGED"},{no:5,name:"DASHLANE"},{no:6,name:"ONE_PASSWORD"},{no:7,name:"NORDPASS"},{no:8,name:"KEEPER"},{no:9,name:"SESAME"},{no:10,name:"ENPASS"},{no:11,name:"CHROMIUM_BROWSER"},{no:12,name:"EDGE_MAC"},{no:13,name:"IDMELON"},{no:14,name:"BITWARDEN"},{no:15,name:"ICLOUD_KEYCHAIN"},{no:16,name:"SAMSUNG_PASS"},{no:17,name:"THALES_BIO_IOS_SDK"},{no:18,name:"THALES_BIO_ANDROID_SDK"},{no:19,name:"THALES_PIN_ANDROID_SDK"},{no:20,name:"THALES_PIN_IOS_SDK"},{no:21,name:"PROTON_PASS"},{no:22,name:"KEEPASSXC"},{no:23,name:"TOOTHPIC_PASSKEY_PROVIDER"},{no:24,name:"IPASSWORDS"},{no:25,name:"ZOHO_VAULT"},{no:26,name:"LASTPASS"},{no:27,name:"DEVOLUTIONS"},{no:28,name:"LOGMEONCE"},{no:29,name:"KASPERSKY_PASSWORD_MANAGER"}]);var ie=class _ extends l{constructor(e){super(),s.util.initPartial(e,this)}static fromBinary(e,t){return new _().fromBinary(e,t)}static fromJson(e,t){return new _().fromJson(e,t)}static fromJsonString(e,t){return new _().fromJsonString(e,t)}static equals(e,t){return s.util.equals(_,e,t)}};ie.runtime=s;ie.typeName="uniswap.embeddedwallet.v1.RegistrationOptions";ie.fields=s.util.newFieldList(()=>[{no:1,name:"authenticator_attachment",kind:"enum",T:s.getEnumType(le),opt:!0},{no:2,name:"username",kind:"scalar",T:9,opt:!0}]);var le;(function(n){n[n.UNSPECIFIED=0]="UNSPECIFIED",n[n.PLATFORM=1]="PLATFORM",n[n.CROSS_PLATFORM=2]="CROSS_PLATFORM"})(le||(le={}));s.util.setEnumType(le,"uniswap.embeddedwallet.v1.RegistrationOptions.AuthenticatorAttachment",[{no:0,name:"UNSPECIFIED"},{no:1,name:"PLATFORM"},{no:2,name:"CROSS_PLATFORM"}]);var ue=class L extends l{constructor(e){super(),this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,this.action=S.ACTION_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new L().fromBinary(e,t)}static fromJson(e,t){return new L().fromJson(e,t)}static fromJsonString(e,t){return new L().fromJsonString(e,t)}static equals(e,t){return s.util.equals(L,e,t)}};ue.runtime=s;ue.typeName="uniswap.embeddedwallet.v1.ChallengeRequest";ue.fields=s.util.newFieldList(()=>[{no:1,name:"type",kind:"enum",T:s.getEnumType(o)},{no:2,name:"action",kind:"enum",T:s.getEnumType(S)},{no:3,name:"options",kind:"message",T:ie,opt:!0}]);var de=class U extends l{constructor(e){super(),this.challengeOptions="",s.util.initPartial(e,this)}static fromBinary(e,t){return new U().fromBinary(e,t)}static fromJson(e,t){return new U().fromJson(e,t)}static fromJsonString(e,t){return new U().fromJsonString(e,t)}static equals(e,t){return s.util.equals(U,e,t)}};de.runtime=s;de.typeName="uniswap.embeddedwallet.v1.ChallengeResponse";de.fields=s.util.newFieldList(()=>[{no:1,name:"challenge_options",kind:"scalar",T:9}]);var me=class W extends l{constructor(e){super(),this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,this.action=S.ACTION_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new W().fromBinary(e,t)}static fromJson(e,t){return new W().fromJson(e,t)}static fromJsonString(e,t){return new W().fromJsonString(e,t)}static equals(e,t){return s.util.equals(W,e,t)}};me.runtime=s;me.typeName="uniswap.embeddedwallet.v1.SecuredChallengeRequest";me.fields=s.util.newFieldList(()=>[{no:1,name:"type",kind:"enum",T:s.getEnumType(o)},{no:2,name:"action",kind:"enum",T:s.getEnumType(S)},{no:3,name:"options",kind:"message",T:ie,opt:!0},{no:4,name:"b64_encryption_public_key",kind:"scalar",T:9,opt:!0}]);var Se=class b extends l{constructor(e){super(),this.challengeOptions="",s.util.initPartial(e,this)}static fromBinary(e,t){return new b().fromBinary(e,t)}static fromJson(e,t){return new b().fromJson(e,t)}static fromJsonString(e,t){return new b().fromJsonString(e,t)}static equals(e,t){return s.util.equals(b,e,t)}};Se.runtime=s;Se.typeName="uniswap.embeddedwallet.v1.SecuredChallengeResponse";Se.fields=s.util.newFieldList(()=>[{no:1,name:"challenge_options",kind:"scalar",T:9}]);var fe=class q extends l{constructor(e){super(),this.credential="",this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new q().fromBinary(e,t)}static fromJson(e,t){return new q().fromJson(e,t)}static fromJsonString(e,t){return new q().fromJsonString(e,t)}static equals(e,t){return s.util.equals(q,e,t)}};fe.runtime=s;fe.typeName="uniswap.embeddedwallet.v1.CreateWalletRequest";fe.fields=s.util.newFieldList(()=>[{no:1,name:"credential",kind:"scalar",T:9},{no:2,name:"type",kind:"enum",T:s.getEnumType(o)}]);var Ee=class J extends l{constructor(e){super(),this.walletAddress="",s.util.initPartial(e,this)}static fromBinary(e,t){return new J().fromBinary(e,t)}static fromJson(e,t){return new J().fromJson(e,t)}static fromJsonString(e,t){return new J().fromJsonString(e,t)}static equals(e,t){return s.util.equals(J,e,t)}};Ee.runtime=s;Ee.typeName="uniswap.embeddedwallet.v1.CreateWalletResponse";Ee.fields=s.util.newFieldList(()=>[{no:1,name:"wallet_address",kind:"scalar",T:9},{no:2,name:"encrypted_seed_phrase",kind:"scalar",T:9,opt:!0}]);var we=class k extends l{constructor(e){super(),this.credential="",this.transactions=[],this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new k().fromBinary(e,t)}static fromJson(e,t){return new k().fromJson(e,t)}static fromJsonString(e,t){return new k().fromJsonString(e,t)}static equals(e,t){return s.util.equals(k,e,t)}};we.runtime=s;we.typeName="uniswap.embeddedwallet.v1.SignTransactionsRequest";we.fields=s.util.newFieldList(()=>[{no:1,name:"credential",kind:"scalar",T:9},{no:2,name:"transactions",kind:"scalar",T:9,repeated:!0},{no:3,name:"type",kind:"enum",T:s.getEnumType(o)}]);var pe=class M extends l{constructor(e){super(),this.signedTransactions=[],s.util.initPartial(e,this)}static fromBinary(e,t){return new M().fromBinary(e,t)}static fromJson(e,t){return new M().fromJson(e,t)}static fromJsonString(e,t){return new M().fromJsonString(e,t)}static equals(e,t){return s.util.equals(M,e,t)}};pe.runtime=s;pe.typeName="uniswap.embeddedwallet.v1.SignTransactionsResponse";pe.fields=s.util.newFieldList(()=>[{no:1,name:"signed_transactions",kind:"scalar",T:9,repeated:!0}]);var he=class B extends l{constructor(e){super(),this.credential="",this.messages=[],this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new B().fromBinary(e,t)}static fromJson(e,t){return new B().fromJson(e,t)}static fromJsonString(e,t){return new B().fromJsonString(e,t)}static equals(e,t){return s.util.equals(B,e,t)}};he.runtime=s;he.typeName="uniswap.embeddedwallet.v1.SignMessagesRequest";he.fields=s.util.newFieldList(()=>[{no:1,name:"credential",kind:"scalar",T:9},{no:2,name:"messages",kind:"scalar",T:9,repeated:!0},{no:3,name:"type",kind:"enum",T:s.getEnumType(o)}]);var ge=class H extends l{constructor(e){super(),this.signedMessages=[],s.util.initPartial(e,this)}static fromBinary(e,t){return new H().fromBinary(e,t)}static fromJson(e,t){return new H().fromJson(e,t)}static fromJsonString(e,t){return new H().fromJsonString(e,t)}static equals(e,t){return s.util.equals(H,e,t)}};ge.runtime=s;ge.typeName="uniswap.embeddedwallet.v1.SignMessagesResponse";ge.fields=s.util.newFieldList(()=>[{no:1,name:"signed_messages",kind:"scalar",T:9,repeated:!0}]);var Te=class F extends l{constructor(e){super(),this.credential="",this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new F().fromBinary(e,t)}static fromJson(e,t){return new F().fromJson(e,t)}static fromJsonString(e,t){return new F().fromJsonString(e,t)}static equals(e,t){return s.util.equals(F,e,t)}};Te.runtime=s;Te.typeName="uniswap.embeddedwallet.v1.WalletSigninRequest";Te.fields=s.util.newFieldList(()=>[{no:1,name:"credential",kind:"scalar",T:9},{no:2,name:"type",kind:"enum",T:s.getEnumType(o)}]);var Ie=class G extends l{constructor(e){super(),this.walletAddress="",s.util.initPartial(e,this)}static fromBinary(e,t){return new G().fromBinary(e,t)}static fromJson(e,t){return new G().fromJson(e,t)}static fromJsonString(e,t){return new G().fromJsonString(e,t)}static equals(e,t){return s.util.equals(G,e,t)}};Ie.runtime=s;Ie.typeName="uniswap.embeddedwallet.v1.WalletSigninResponse";Ie.fields=s.util.newFieldList(()=>[{no:1,name:"wallet_address",kind:"scalar",T:9},{no:2,name:"exported",kind:"scalar",T:8,opt:!0}]);var Ae=class Y extends l{constructor(e){super(),this.credential="",this.b64EncryptionPublicKey="",this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new Y().fromBinary(e,t)}static fromJson(e,t){return new Y().fromJson(e,t)}static fromJsonString(e,t){return new Y().fromJsonString(e,t)}static equals(e,t){return s.util.equals(Y,e,t)}};Ae.runtime=s;Ae.typeName="uniswap.embeddedwallet.v1.ExportSeedPhraseRequest";Ae.fields=s.util.newFieldList(()=>[{no:1,name:"credential",kind:"scalar",T:9},{no:2,name:"b64_encryption_public_key",kind:"scalar",T:9},{no:3,name:"type",kind:"enum",T:s.getEnumType(o)}]);var Ne=class x extends l{constructor(e){super(),this.encryptedSeedPhrase="",s.util.initPartial(e,this)}static fromBinary(e,t){return new x().fromBinary(e,t)}static fromJson(e,t){return new x().fromJson(e,t)}static fromJsonString(e,t){return new x().fromJsonString(e,t)}static equals(e,t){return s.util.equals(x,e,t)}};Ne.runtime=s;Ne.typeName="uniswap.embeddedwallet.v1.ExportSeedPhraseResponse";Ne.fields=s.util.newFieldList(()=>[{no:1,name:"encrypted_seed_phrase",kind:"scalar",T:9}]);var Re=class K extends l{constructor(e){super(),this.credential="",this.typedDataBatch=[],this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new K().fromBinary(e,t)}static fromJson(e,t){return new K().fromJson(e,t)}static fromJsonString(e,t){return new K().fromJsonString(e,t)}static equals(e,t){return s.util.equals(K,e,t)}};Re.runtime=s;Re.typeName="uniswap.embeddedwallet.v1.SignTypedDataBatchRequest";Re.fields=s.util.newFieldList(()=>[{no:1,name:"credential",kind:"scalar",T:9},{no:2,name:"typed_data_batch",kind:"scalar",T:9,repeated:!0},{no:3,name:"type",kind:"enum",T:s.getEnumType(o)}]);var Ce=class Z extends l{constructor(e){super(),this.signature=[],s.util.initPartial(e,this)}static fromBinary(e,t){return new Z().fromBinary(e,t)}static fromJson(e,t){return new Z().fromJson(e,t)}static fromJsonString(e,t){return new Z().fromJsonString(e,t)}static equals(e,t){return s.util.equals(Z,e,t)}};Ce.runtime=s;Ce.typeName="uniswap.embeddedwallet.v1.SignTypedDataBatchResponse";Ce.fields=s.util.newFieldList(()=>[{no:1,name:"signature",kind:"scalar",T:9,repeated:!0}]);var ye=class V extends l{constructor(e){super(),this.credential="",this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,this.authenticatorId="",this.authenticatorType="",s.util.initPartial(e,this)}static fromBinary(e,t){return new V().fromBinary(e,t)}static fromJson(e,t){return new V().fromJson(e,t)}static fromJsonString(e,t){return new V().fromJsonString(e,t)}static equals(e,t){return s.util.equals(V,e,t)}};ye.runtime=s;ye.typeName="uniswap.embeddedwallet.v1.DeleteAuthenticatorRequest";ye.fields=s.util.newFieldList(()=>[{no:1,name:"credential",kind:"scalar",T:9},{no:2,name:"type",kind:"enum",T:s.getEnumType(o)},{no:3,name:"authenticator_id",kind:"scalar",T:9},{no:4,name:"authenticator_type",kind:"scalar",T:9}]);var ve=class j extends l{constructor(e){super(),s.util.initPartial(e,this)}static fromBinary(e,t){return new j().fromBinary(e,t)}static fromJson(e,t){return new j().fromJson(e,t)}static fromJsonString(e,t){return new j().fromJsonString(e,t)}static equals(e,t){return s.util.equals(j,e,t)}};ve.runtime=s;ve.typeName="uniswap.embeddedwallet.v1.DeleteAuthenticatorResponse";ve.fields=s.util.newFieldList(()=>[]);var Oe=class X extends l{constructor(e){super(),s.util.initPartial(e,this)}static fromBinary(e,t){return new X().fromBinary(e,t)}static fromJson(e,t){return new X().fromJson(e,t)}static fromJsonString(e,t){return new X().fromJsonString(e,t)}static equals(e,t){return s.util.equals(X,e,t)}};Oe.runtime=s;Oe.typeName="uniswap.embeddedwallet.v1.DisconnectWalletRequest";Oe.fields=s.util.newFieldList(()=>[]);var Pe=class z extends l{constructor(e){super(),s.util.initPartial(e,this)}static fromBinary(e,t){return new z().fromBinary(e,t)}static fromJson(e,t){return new z().fromJson(e,t)}static fromJsonString(e,t){return new z().fromJsonString(e,t)}static equals(e,t){return s.util.equals(z,e,t)}};Pe.runtime=s;Pe.typeName="uniswap.embeddedwallet.v1.DisconnectWalletResponse";Pe.fields=s.util.newFieldList(()=>[]);var De=class Q extends l{constructor(e){super(),this.newCredential="",this.newAuthenticationType=o.AUTHENTICATION_TYPE_UNSPECIFIED,this.existingCredential="",this.existingAuthenticationType=o.AUTHENTICATION_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new Q().fromBinary(e,t)}static fromJson(e,t){return new Q().fromJson(e,t)}static fromJsonString(e,t){return new Q().fromJsonString(e,t)}static equals(e,t){return s.util.equals(Q,e,t)}};De.runtime=s;De.typeName="uniswap.embeddedwallet.v1.RegisterNewAuthenticatorRequest";De.fields=s.util.newFieldList(()=>[{no:1,name:"new_credential",kind:"scalar",T:9},{no:2,name:"new_authentication_type",kind:"enum",T:s.getEnumType(o)},{no:3,name:"existing_credential",kind:"scalar",T:9},{no:4,name:"existing_authentication_type",kind:"enum",T:s.getEnumType(o)}]);var _e=class $ extends l{constructor(e){super(),s.util.initPartial(e,this)}static fromBinary(e,t){return new $().fromBinary(e,t)}static fromJson(e,t){return new $().fromJson(e,t)}static fromJsonString(e,t){return new $().fromJsonString(e,t)}static equals(e,t){return s.util.equals($,e,t)}};_e.runtime=s;_e.typeName="uniswap.embeddedwallet.v1.RegisterNewAuthenticatorResponse";_e.fields=s.util.newFieldList(()=>[]);var Le=class ee extends l{constructor(e){super(),this.credential="",this.type=o.AUTHENTICATION_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new ee().fromBinary(e,t)}static fromJson(e,t){return new ee().fromJson(e,t)}static fromJsonString(e,t){return new ee().fromJsonString(e,t)}static equals(e,t){return s.util.equals(ee,e,t)}};Le.runtime=s;Le.typeName="uniswap.embeddedwallet.v1.ListAuthenticatorsRequest";Le.fields=s.util.newFieldList(()=>[{no:1,name:"credential",kind:"scalar",T:9},{no:2,name:"type",kind:"enum",T:s.getEnumType(o)}]);var Ue=class te extends l{constructor(e){super(),this.authenticators=[],s.util.initPartial(e,this)}static fromBinary(e,t){return new te().fromBinary(e,t)}static fromJson(e,t){return new te().fromJson(e,t)}static fromJsonString(e,t){return new te().fromJsonString(e,t)}static equals(e,t){return s.util.equals(te,e,t)}};Ue.runtime=s;Ue.typeName="uniswap.embeddedwallet.v1.ListAuthenticatorsResponse";Ue.fields=s.util.newFieldList(()=>[{no:1,name:"authenticators",kind:"message",T:We,repeated:!0}]);var We=class ne extends l{constructor(e){super(),this.id="",this.type="",this.username="",this.providerName=re.AUTHENTICATOR_NAME_TYPE_UNSPECIFIED,s.util.initPartial(e,this)}static fromBinary(e,t){return new ne().fromBinary(e,t)}static fromJson(e,t){return new ne().fromJson(e,t)}static fromJsonString(e,t){return new ne().fromJsonString(e,t)}static equals(e,t){return s.util.equals(ne,e,t)}};We.runtime=s;We.typeName="uniswap.embeddedwallet.v1.Authenticator";We.fields=s.util.newFieldList(()=>[{no:1,name:"id",kind:"scalar",T:9},{no:2,name:"type",kind:"scalar",T:9},{no:3,name:"username",kind:"scalar",T:9},{no:4,name:"provider_name",kind:"enum",T:s.getEnumType(re)},{no:5,name:"creation_time",kind:"message",T:ce}]);const It={typeName:"uniswap.embeddedwallet.v1.EmbeddedWalletService",methods:{challenge:{name:"Challenge",I:ue,O:de,kind:N.Unary},securedChallenge:{name:"SecuredChallenge",I:me,O:Se,kind:N.Unary},createWallet:{name:"CreateWallet",I:fe,O:Ee,kind:N.Unary},signMessages:{name:"SignMessages",I:he,O:ge,kind:N.Unary},signTransactions:{name:"SignTransactions",I:we,O:pe,kind:N.Unary},walletSignin:{name:"WalletSignin",I:Te,O:Ie,kind:N.Unary},signTypedDataBatch:{name:"SignTypedDataBatch",I:Re,O:Ce,kind:N.Unary},exportSeedPhrase:{name:"ExportSeedPhrase",I:Ae,O:Ne,kind:N.Unary},deleteAuthenticator:{name:"DeleteAuthenticator",I:ye,O:ve,kind:N.Unary},disconnectWallet:{name:"DisconnectWallet",I:Oe,O:Pe,kind:N.Unary},registerNewAuthenticator:{name:"RegisterNewAuthenticator",I:De,O:_e,kind:N.Unary},listAuthenticators:{name:"ListAuthenticators",I:Le,O:Ue,kind:N.Unary}}},At=(tt||Ze)&&rt(),Nt=ot({baseUrl:it()||At?Be.evervaultProductionUrl:Be.evervaultStagingUrl,credentials:"include",interceptors:[n=>e=>(Ze&&e.header.set("Origin",Be.requestOriginUrl),e.header.set("x-request-source",ct),e.header.set("x-app-version",ut()),n(e))]}),C=lt(It,Nt);async function be({type:n,action:e,options:t}){return await C.challenge({type:n,action:e,options:t})}async function Rt({credential:n}){return await C.createWallet({credential:n})}async function Ct({credential:n}){return await C.walletSignin({credential:n})}async function yt({messages:n,credential:e}){return await C.signMessages({messages:n,credential:e})}async function vt({transactions:n,credential:e}){return await C.signTransactions({transactions:n,credential:e})}async function Ot({typedDataBatch:n,credential:e}){return await C.signTypedDataBatch({typedDataBatch:n,credential:e})}async function Pt(){return await C.disconnectWallet({})}async function Dt({credential:n}){return await C.listAuthenticators({credential:n})}async function _t({newCredential:n,newAuthenticationType:e,existingCredential:t,existingAuthenticationType:i}){return await C.registerNewAuthenticator({newCredential:n,newAuthenticationType:e,existingCredential:t,existingAuthenticationType:i})}async function Lt({credential:n,authenticationType:e,authenticatorId:t,authenticatorType:i}){return await C.deleteAuthenticator({credential:n,type:e,authenticatorId:t,authenticatorType:i})}async function je({username:n,authenticatorAttachment:e,action:t}={}){const i={authenticatorAttachment:e,username:n};try{const c=await be({type:o.PASSKEY_REGISTRATION,action:t??S.CREATE_WALLET,options:i});return await ft(c.challengeOptions)}catch(c){throw c instanceof Error&&c.name==="AbortError"?w.debug("embeddedWallet.ts","registerNewPasskey","User aborted registration"):w.debug("embeddedWallet.ts","registerNewPasskey",`Error during registration: ${c}`),c}}async function an(n){try{const e=await je({username:n});if(!e)return;const t=await Rt({credential:e});if(t.walletAddress){if(w.debug("embeddedWallet.ts","createNewEmbeddedWallet",`New wallet created: ${t.walletAddress}`),!xe(t.walletAddress)){w.error(new Error("Invalid address returned from create wallet response"),{tags:{file:"embeddedWallet.ts",function:"createNewEmbeddedWallet"}});return}const i=xe(t.walletAddress);if(!i)throw new Error(`Invalid wallet address returned: ${t.walletAddress}`);return i}return}catch(e){throw w.error(e,{tags:{file:"embeddedWallet.ts",function:"createNewEmbeddedWallet"}}),e}}async function on(n){if(!Xe.includes(n))return!1;try{return(await be({type:o.PASSKEY_AUTHENTICATION,action:n})).challengeOptions.length===0}catch{return!1}}const Xe=[S.SIGN_MESSAGES,S.SIGN_TRANSACTIONS,S.SIGN_TYPED_DATA_BATCH,S.LIST_AUTHENTICATORS,S.ACTION_UNSPECIFIED];async function Ut(n,e){const t=await Wt();if(!t)throw new Error("Failed to re-authenticate");if(e&&t.walletAddress!==e)throw await bt(),new Error("not_found: Failed to re-authenticate with correct passkey [00000000-0000-0000-0000-000000000000]");return await be({type:o.PASSKEY_AUTHENTICATION,action:n})}async function ae(n,e){let t;try{return t=await be({type:o.PASSKEY_AUTHENTICATION,action:n}),t.challengeOptions&&Xe.includes(n)&&(t=await Ut(n,e)),await St(t.challengeOptions)}catch(i){if(i instanceof Error&&i.name==="AbortError"){w.debug("embeddedWallet.ts","authenticateWithPasskey","User aborted the registration process");return}else throw w.error(new Error("Error during authentication",{cause:i}),{tags:{file:"embeddedWallet.ts",function:"authenticateWithPasskey"}}),i}}async function Wt(){try{const n=await ae(S.WALLET_SIGNIN);if(!n)return;const e=await Ct({credential:n});return e.walletAddress?e:void 0}catch(n){throw w.error(n,{tags:{file:"embeddedWallet.ts",function:"signInWithPasskey"}}),n}}async function ln(n,e){try{const t=await ae(S.SIGN_MESSAGES,e);return(await yt({messages:n,credential:t})).signedMessages}catch(t){throw w.error(t,{tags:{file:"embeddedWallet.ts",function:"signMessagesWithPasskey"}}),t}}async function cn(n,e){try{const t=await ae(S.SIGN_TRANSACTIONS,e);return(await vt({transactions:n,credential:t})).signedTransactions}catch(t){throw w.error(t,{tags:{file:"embeddedWallet.ts",function:"signTransactionWithPasskey"}}),t}}async function un(n,e){try{const t=await ae(S.SIGN_TYPED_DATA_BATCH,e);return(await Ot({typedDataBatch:n,credential:t})).signature}catch(t){throw w.error(t,{tags:{file:"embeddedWallet.ts",function:"signTypedDataWithPasskey"}}),t}}async function bt(){try{await Pt()}catch(n){throw w.error(n,{tags:{file:"embeddedWallet.ts",function:"disconnectWallet"}}),n}}async function dn(n){try{const e=await ae(S.LIST_AUTHENTICATORS,n);return(await Dt({credential:e})).authenticators}catch(e){throw w.error(e,{tags:{file:"embeddedWallet.ts",function:"listAuthenticators"}}),e}}async function mn({authenticatorAttachment:n,existingCredential:e,username:t}){try{const i=await je({authenticatorAttachment:n,action:S.REGISTER_NEW_AUTHENTICATION_TYPES,username:t});return i&&e?(await _t({newCredential:i,newAuthenticationType:o.PASSKEY_REGISTRATION,existingCredential:e,existingAuthenticationType:o.PASSKEY_AUTHENTICATION}),!0):!1}catch(i){throw w.error(i,{tags:{file:"embeddedWallet.ts",function:"registerNewAuthenticator"}}),i}}async function Sn({authenticator:n,credential:e}){try{return e?(await Lt({credential:e,authenticationType:o.PASSKEY_AUTHENTICATION,authenticatorId:n.id,authenticatorType:n.type}),!0):!1}catch(t){throw w.error(t,{tags:{file:"embeddedWallet.ts",function:"deleteAuthenticator"}}),t}}export{S as Action,re as AuthenticatorNameType,le as RegistrationOptions_AuthenticatorAttachment,pt as WC_PARAMS,ae as authenticateWithPasskey,$t as createConnector,an as createNewEmbeddedWallet,Sn as deleteAuthenticator,bt as disconnectWallet,sn as getEmbeddedWalletState,on as isSessionAuthenticatedForAction,dn as listAuthenticators,mn as registerNewAuthenticator,rn as setChainId,Wt as signInWithPasskey,ln as signMessagesWithPasskey,cn as signTransactionsWithPasskey,un as signTypedDataWithPasskey,tn as uniswapWalletConnect,nn as useEmbeddedWalletState,Ge as walletConnect,en as walletTypeToAmplitudeWalletType};
