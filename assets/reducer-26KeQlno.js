import{createSlice as t}from"./redux-toolkit.esm-BnRUBto_.js";import{DEFAULT_DEADLINE_FROM_NOW as n}from"./misc-BMnlqqV4.js";import{RouterPreference as s}from"./types-DbOmsKtk.js";let i=(function(e){return e.Auto="auto",e})({});const o=()=>new Date().getTime();function u(e,r){return`${e};${r}`}const p={userRouterPreference:s.X,userHideClosedPositions:!1,userSlippageTolerance:i.Auto,userSlippageToleranceHasBeenMigratedToAuto:!0,userDeadline:n,pairs:{},timestamp:o(),showSurveyPopup:void 0,originCountry:void 0,isEmbeddedWalletBackedUp:!1},d=t({name:"user",initialState:p,reducers:{updateIsEmbeddedWalletBackedUp(e,{payload:{isEmbeddedWalletBackedUp:r}}){e.isEmbeddedWalletBackedUp=r},updateUserSlippageTolerance(e,r){e.userSlippageTolerance=r.payload.userSlippageTolerance,e.timestamp=o()},updateUserDeadline(e,r){e.userDeadline=r.payload.userDeadline,e.timestamp=o()},updateUserRouterPreference(e,r){e.userRouterPreference=r.payload.userRouterPreference},updateHideClosedPositions(e,r){e.userHideClosedPositions=r.payload.userHideClosedPositions},addSerializedPair(e,{payload:{serializedPair:r}}){if(r.token0.chainId===r.token1.chainId&&r.token0.address!==r.token1.address){const a=r.token0.chainId;e.pairs[a]=e.pairs[a]||{},e.pairs[a][u(r.token0.address,r.token1.address)]=r}e.timestamp=o()},setOriginCountry(e,{payload:r}){e.originCountry=r}}}),{addSerializedPair:f,setOriginCountry:y,updateHideClosedPositions:g,updateUserRouterPreference:S,updateUserDeadline:k,updateUserSlippageTolerance:U,updateIsEmbeddedWalletBackedUp:T}=d.actions;var C=d.reducer;export{i as SlippageTolerance,f as addSerializedPair,p as initialState,C as reducer_default,y as setOriginCountry,T as updateIsEmbeddedWalletBackedUp,k as updateUserDeadline,S as updateUserRouterPreference,U as updateUserSlippageTolerance};
