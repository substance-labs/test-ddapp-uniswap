import{isMobileApp as f}from"./index.web-BqgtOHN3.js";import{uniswapUrls as m}from"./urls-kwiZbYPW.js";import{REQUEST_SOURCE as g,getVersionHeader as l}from"./constants-D9cStT7K.js";var o=class extends Error{constructor({response:e,data:c,cause:i}){super(`Response status: ${e.status}`),this.name="FetchError",this.response=e,this.data=c,this.cause=i}};function y(e){return e instanceof o&&!!e.response.status&&e.response.status>=412&&e.response.status<=429}function O(e){return e instanceof o&&!!e.response.status&&e.response.status===404}const E={"x-request-source":g,"x-app-version":l(),...f?{Origin:m.apiOrigin}:{}};function R({baseUrl:e,includeBaseUniswapHeaders:c=!0,additionalHeaders:i={}}){const p=c?{...E,...i}:i;return{get fetch(){return(s,t)=>fetch(`${e}${s}`,{...t,headers:{...p,...t==null?void 0:t.headers}})},get get(){return async(s,t)=>{if(t!=null&&t.params){const a=new URLSearchParams;for(const[u,h]of Object.entries(t.params))h!=null&&a.append(u,h.toString());s+="?"+a.toString()}const{on404:r,...d}=t??{},n=await this.fetch(s,d);if(r&&n.status===404&&r(),!n.ok){let a;try{a=await n.json()}catch(u){throw new o({response:n,cause:u})}throw new o({response:n,data:a})}return await n.json()}},get post(){return async(s,t)=>{const r=t;return r.headers={"Content-Type":"application/json",...t.headers??{}},await this.get(s,{...r,method:"POST"})}},get put(){return async(s,t)=>{const r=t;return r.headers={"Content-Type":"application/json",...t.headers??{}},await this.get(s,{...r,method:"PUT"})}},get delete(){return async(s,t={})=>await this.get(s,{...t,method:"DELETE"})}}}export{E as BASE_UNISWAP_HEADERS,o as FetchError,R as createApiClient,O as is404Error,y as isRateLimitFetchError};
