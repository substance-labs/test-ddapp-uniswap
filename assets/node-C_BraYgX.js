import{BaseError as t}from"./isAddress-P2vaZgmG.js";import{formatUnits as i}from"./formatUnits-DkyMpOD7.js";const T={gwei:9,wei:18},c={ether:-9,wei:9},E={ether:-18,gwei:-9};function n(r,e="wei"){return i(r,c[e])}var s=class extends t{constructor({cause:r,message:e}={}){var o;const a=e==null||(o=e.replace("execution reverted: ",""))===null||o===void 0?void 0:o.replace("execution reverted","");super(`Execution reverted ${a?`with reason: ${a}`:"for an unknown reason"}.`,{cause:r,name:"ExecutionRevertedError"})}};Object.defineProperty(s,"code",{enumerable:!0,configurable:!0,writable:!0,value:3});Object.defineProperty(s,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/execution reverted/});var u=class extends t{constructor({cause:r,maxFeePerGas:e}={}){super(`The fee cap (\`maxFeePerGas\`${e?` = ${n(e)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`,{cause:r,name:"FeeCapTooHighError"})}};Object.defineProperty(u,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/});var l=class extends t{constructor({cause:r,maxFeePerGas:e}={}){super(`The fee cap (\`maxFeePerGas\`${e?` = ${n(e)}`:""} gwei) cannot be lower than the block base fee.`,{cause:r,name:"FeeCapTooLowError"})}};Object.defineProperty(l,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/});var d=class extends t{constructor({cause:r,nonce:e}={}){super(`Nonce provided for the transaction ${e?`(${e}) `:""}is higher than the next one expected.`,{cause:r,name:"NonceTooHighError"})}};Object.defineProperty(d,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too high/});var h=class extends t{constructor({cause:r,nonce:e}={}){super([`Nonce provided for the transaction ${e?`(${e}) `:""}is lower than the current nonce of the account.`,"Try increasing the nonce or find the latest nonce with `getTransactionCount`."].join(`
`),{cause:r,name:"NonceTooLowError"})}};Object.defineProperty(h,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too low|transaction already imported|already known/});var f=class extends t{constructor({cause:r,nonce:e}={}){super(`Nonce provided for the transaction ${e?`(${e}) `:""}exceeds the maximum allowed nonce.`,{cause:r,name:"NonceMaxValueError"})}};Object.defineProperty(f,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce has max value/});var p=class extends t{constructor({cause:r}={}){super(["The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account."].join(`
`),{cause:r,metaMessages:["This error could arise when the account does not have enough funds to:"," - pay for the total gas fee,"," - pay for the value to send."," ","The cost of the transaction is calculated as `gas * gas fee + value`, where:"," - `gas` is the amount of gas needed for transaction to execute,"," - `gas fee` is the gas fee,"," - `value` is the amount of ether to send to the recipient."],name:"InsufficientFundsError"})}};Object.defineProperty(p,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/insufficient funds|exceeds transaction sender account balance/});var g=class extends t{constructor({cause:r,gas:e}={}){super(`The amount of gas ${e?`(${e}) `:""}provided for the transaction exceeds the limit allowed for the block.`,{cause:r,name:"IntrinsicGasTooHighError"})}};Object.defineProperty(g,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too high|gas limit reached/});var b=class extends t{constructor({cause:r,gas:e}={}){super(`The amount of gas ${e?`(${e}) `:""}provided for the transaction is too low.`,{cause:r,name:"IntrinsicGasTooLowError"})}};Object.defineProperty(b,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too low/});var v=class extends t{constructor({cause:r}){super("The transaction type is not supported for this chain.",{cause:r,name:"TransactionTypeNotSupportedError"})}};Object.defineProperty(v,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/transaction type not valid/});var m=class extends t{constructor({cause:r,maxPriorityFeePerGas:e,maxFeePerGas:o}={}){super([`The provided tip (\`maxPriorityFeePerGas\`${e?` = ${n(e)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${o?` = ${n(o)} gwei`:""}).`].join(`
`),{cause:r,name:"TipAboveFeeCapError"})}};Object.defineProperty(m,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max priority fee per gas higher than max fee per gas|tip higher than fee cap/});var y=class extends t{constructor({cause:r}){super(`An error occurred while executing: ${r==null?void 0:r.shortMessage}`,{cause:r,name:"UnknownNodeError"})}};export{s as ExecutionRevertedError,u as FeeCapTooHighError,l as FeeCapTooLowError,p as InsufficientFundsError,g as IntrinsicGasTooHighError,b as IntrinsicGasTooLowError,f as NonceMaxValueError,d as NonceTooHighError,h as NonceTooLowError,m as TipAboveFeeCapError,v as TransactionTypeNotSupportedError,y as UnknownNodeError,T as etherUnits,n as formatGwei,E as weiUnits};
