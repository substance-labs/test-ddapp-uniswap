import{ZERO_ADDRESS as p}from"./utils-BX1Fu73x.js";import{areCurrenciesEqual as o}from"./currencyId-Ci6selsx.js";import{WRAPPED_NATIVE_CURRENCY as a,nativeOnChain as r}from"./objects-DlLkJwrJ.js";import{ProtocolVersion as e}from"./types_pb-yZxlo4b1.js";function N(t,i){if(t){if(i===e.V4){const n=a[t.chainId];return o(n,t)?r(t.chainId):t}return t.isToken?t:t.wrapped}}function E(t,i){return i===e.V4||t!=null&&t.isToken?t:t==null?void 0:t.wrapped}function C(t){if(t)return t.isToken?t.address:p}function T(t){return!!t.TOKEN0&&!!t.TOKEN1}function l(t,i){return i?{baseCurrency:t.TOKEN1,quoteCurrency:t.TOKEN0}:{baseCurrency:t.TOKEN0,quoteCurrency:t.TOKEN1}}function O(t,i){if(i===e.V4||!t)return!1;const n=a[t.chainId];return o(n,t)}function h({currency:t,shouldUnwrap:i}){if(!t)return;const n=a[t.chainId];return!o(n,t)||!i?t:r(t.chainId)}export{O as canUnwrapCurrency,l as getBaseAndQuoteCurrencies,N as getCurrencyForProtocol,h as getCurrencyWithOptionalUnwrap,E as getCurrencyWithWrap,C as getTokenOrZeroAddress,T as validateCurrencyInput};
