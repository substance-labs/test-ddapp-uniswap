import{logger as c}from"./hooks-BXO4d1DJ.js";import{TypedDataEncoder as s,init_lib as p}from"./lib-CKG8APVv.js";import{WalletType as g,getWalletMeta as f}from"./walletMeta-DaLhfhet.js";p();const u=["SafePal Wallet","Ledger Wallet Connect"];function h(t){const n=f(t);if(n){const{type:a,name:r}=n;if(r&&a===g.WALLET_CONNECT&&r&&u.includes(r))return!1}return!0}async function v({signer:t,domain:n,types:a,value:r}){const o=await s.resolveNames(n,a,r,e=>t.provider.resolveName(e)),d=h(t.provider)?"eth_signTypedData_v4":"eth_signTypedData",i=(await t.getAddress()).toLowerCase(),l=JSON.stringify(s.getPayload(o.domain,a,o.value));try{return await t.provider.send(d,[i,l])}catch(e){if(typeof e.message=="string"&&(e.message.match(/not (found|implemented)/i)||e.message.match(/TrustWalletConnect.WCError error 1/)||e.message.match(/Missing or invalid/))){c.warn("signing","signTypedData","signTypedData: wallet does not implement EIP-712, falling back to eth_sign",e);const m=s.hash(o.domain,a,o.value);return await t.provider.send("eth_sign",[i,m])}throw e}}export{v as signTypedData};
