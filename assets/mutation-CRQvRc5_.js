import{Removable as D,createRetryer as E,notifyManager as O}from"./useQuery-D_ZCw8XG.js";var e=(function(t){function l(i,s,o){if(typeof i=="function"?i===s:i.has(s))return arguments.length<3?s:o;throw TypeError("Private element is not present on this object")}function r(i,s,o){return i.set(l(i,s),o),o}function v(i,s){if(s.has(i))throw TypeError("Cannot initialize the same private elements twice on an object")}function f(i,s,o){v(i,s),s.set(i,o)}function y(i,s){v(i,s),s.add(i)}function F(i,s){return i.get(l(i,s))}return t.assertClassBrand=l,t.classPrivateFieldGet2=F,t.classPrivateFieldInitSpec=f,t.classPrivateFieldSet2=r,t.classPrivateMethodInitSpec=y,t})({}),u,n,h,d,A=(u=new WeakMap,n=new WeakMap,h=new WeakMap,d=new WeakSet,class extends D{constructor(t){super(),e.classPrivateMethodInitSpec(this,d),e.classPrivateFieldInitSpec(this,u,void 0),e.classPrivateFieldInitSpec(this,n,void 0),e.classPrivateFieldInitSpec(this,h,void 0),this.mutationId=t.mutationId,e.classPrivateFieldSet2(n,this,t.mutationCache),e.classPrivateFieldSet2(u,this,[]),this.state=t.state||W(),this.setOptions(t.options),this.scheduleGc()}setOptions(t){this.options=t,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(t){e.classPrivateFieldGet2(u,this).includes(t)||(e.classPrivateFieldGet2(u,this).push(t),this.clearGcTimeout(),e.classPrivateFieldGet2(n,this).notify({type:"observerAdded",mutation:this,observer:t}))}removeObserver(t){e.classPrivateFieldSet2(u,this,e.classPrivateFieldGet2(u,this).filter(l=>l!==t)),this.scheduleGc(),e.classPrivateFieldGet2(n,this).notify({type:"observerRemoved",mutation:this,observer:t})}optionalRemove(){e.classPrivateFieldGet2(u,this).length||(this.state.status==="pending"?this.scheduleGc():e.classPrivateFieldGet2(n,this).remove(this))}continue(){var t;return((t=e.classPrivateFieldGet2(h,this))===null||t===void 0?void 0:t.continue())??this.execute(this.state.variables)}async execute(t){const l=()=>{e.assertClassBrand(d,this,c).call(this,{type:"continue"})};e.classPrivateFieldSet2(h,this,E({fn:()=>this.options.mutationFn?this.options.mutationFn(t):Promise.reject(new Error("No mutationFn found")),onFail:(a,m)=>{e.assertClassBrand(d,this,c).call(this,{type:"failed",failureCount:a,error:m})},onPause:()=>{e.assertClassBrand(d,this,c).call(this,{type:"pause"})},onContinue:l,retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>e.classPrivateFieldGet2(n,this).canRun(this)}));const r=this.state.status==="pending",v=!e.classPrivateFieldGet2(h,this).canStart();try{var f,y,F,i,s,o,P,x;if(r)l();else{var p,R,G,M;e.assertClassBrand(d,this,c).call(this,{type:"pending",variables:t,isPaused:v}),await((p=(R=e.classPrivateFieldGet2(n,this).config).onMutate)===null||p===void 0?void 0:p.call(R,t,this));const m=await((G=(M=this.options).onMutate)===null||G===void 0?void 0:G.call(M,t));m!==this.state.context&&e.assertClassBrand(d,this,c).call(this,{type:"pending",context:m,variables:t,isPaused:v})}const a=await e.classPrivateFieldGet2(h,this).start();return await((f=(y=e.classPrivateFieldGet2(n,this).config).onSuccess)===null||f===void 0?void 0:f.call(y,a,t,this.state.context,this)),await((F=(i=this.options).onSuccess)===null||F===void 0?void 0:F.call(i,a,t,this.state.context)),await((s=(o=e.classPrivateFieldGet2(n,this).config).onSettled)===null||s===void 0?void 0:s.call(o,a,null,this.state.variables,this.state.context,this)),await((P=(x=this.options).onSettled)===null||P===void 0?void 0:P.call(x,a,null,t,this.state.context)),e.assertClassBrand(d,this,c).call(this,{type:"success",data:a}),a}catch(a){try{var w,B,C,I,g,k,S,T;throw await((w=(B=e.classPrivateFieldGet2(n,this).config).onError)===null||w===void 0?void 0:w.call(B,a,t,this.state.context,this)),await((C=(I=this.options).onError)===null||C===void 0?void 0:C.call(I,a,t,this.state.context)),await((g=(k=e.classPrivateFieldGet2(n,this).config).onSettled)===null||g===void 0?void 0:g.call(k,void 0,a,this.state.variables,this.state.context,this)),await((S=(T=this.options).onSettled)===null||S===void 0?void 0:S.call(T,void 0,a,t,this.state.context)),a}finally{e.assertClassBrand(d,this,c).call(this,{type:"error",error:a})}}finally{e.classPrivateFieldGet2(n,this).runNext(this)}}});function c(t){const l=r=>{switch(t.type){case"failed":return{...r,failureCount:t.failureCount,failureReason:t.error};case"pause":return{...r,isPaused:!0};case"continue":return{...r,isPaused:!1};case"pending":return{...r,context:t.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:t.isPaused,status:"pending",variables:t.variables,submittedAt:Date.now()};case"success":return{...r,data:t.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...r,data:void 0,error:t.error,failureCount:r.failureCount+1,failureReason:t.error,isPaused:!1,status:"error"}}};this.state=l(this.state),O.batch(()=>{e.classPrivateFieldGet2(u,this).forEach(r=>{r.onMutationUpdate(t)}),e.classPrivateFieldGet2(n,this).notify({mutation:this,type:"updated",action:t})})}function W(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}export{A as Mutation,W as getDefaultState};
