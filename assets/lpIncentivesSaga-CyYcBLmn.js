import{call as i,createSaga as h,handleOnChainStep as f}from"./utils-CK6a47NA.js";import{TransactionType as u}from"./transactionDetails-BsNW_jus.js";import{TransactionStepType as y}from"./types-7DAoWLTI.js";import{PopupType as S,popupRegistry as w}from"./types-BSmAADNJ.js";function*C(o){const{account:r,claimData:e,chainId:c,tokenAddress:s,selectChain:l,onSuccess:p,onFailure:a,setCurrentStep:m}=o;try{if(!e.claim)throw new Error("No claim data provided");if(e.claim.chainId!==c&&!(yield*i(l,e.claim.chainId))){a(new Error("Failed to switch to Ethereum mainnet"));return}const t={type:u.LPIncentivesClaimRewards,tokenAddress:s},d={type:y.CollectLpIncentiveRewardsTransactionStep,txRequest:e.claim},n=yield*i(f,{account:r,step:d,info:t,setCurrentStep:m,shouldWaitForConfirmation:!1});w.addPopup({type:S.Transaction,hash:n},n),yield*i(p)}catch(t){a(t instanceof Error?t:new Error("Failed to claim LP incentives"))}}const F=h(C,"lpIncentivesClaimSaga");export{F as lpIncentivesClaimSaga};
