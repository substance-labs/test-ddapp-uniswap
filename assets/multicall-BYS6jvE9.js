import{BaseError as x}from"./isAddress-P2vaZgmG.js";import{RawContractError as P,decodeFunctionResult as _,getChainContractAddress as $,multicall3Abi as q}from"./call-CTDbaN-t.js";import{AbiDecodingZeroDataError as B,encodeFunctionData as O}from"./encodeFunctionData-CD63gkvM.js";import{getAction as T,getContractError as E,readContract as Z}from"./readContract-Cae4hIjn.js";async function K(n,w){var g;const{account:p,allowFailure:u=!0,batchSize:F,blockNumber:C,blockTag:j,multicallAddress:y,stateOverride:N}=w,h=w.contracts,A=F??(typeof((g=n.batch)===null||g===void 0?void 0:g.multicall)=="object"&&n.batch.multicall.batchSize||1024);let m=y;if(!m){if(!n.chain)throw new Error("client chain not configured. multicallAddress is required.");m=$({blockNumber:C,chain:n.chain,contract:"multicall3"})}const a=[[]];let e=0,f=0;for(let t=0;t<h.length;t++){const{abi:c,address:s,args:r,functionName:i}=h[t];try{const l=O({abi:c,args:r,functionName:i});f+=(l.length-2)/2,A>0&&f>A&&a[e].length>0&&(e++,f=(l.length-2)/2,a[e]=[]),a[e]=[...a[e],{allowFailure:!0,callData:l,target:s}]}catch(l){const b=E(l,{abi:c,address:s,args:r,docsPath:"/docs/contract/multicall",functionName:i,sender:p});if(!u)throw b;a[e]=[...a[e],{allowFailure:!0,callData:"0x",target:s}]}}const v=await Promise.allSettled(a.map(t=>T(n,Z,"readContract")({abi:q,account:p,address:m,args:[t],blockNumber:C,blockTag:j,functionName:"aggregate3",stateOverride:N}))),o=[];for(let t=0;t<v.length;t++){const c=v[t];if(c.status==="rejected"){if(!u)throw c.reason;for(let r=0;r<a[t].length;r++)o.push({status:"failure",error:c.reason,result:void 0});continue}const s=c.value;for(let r=0;r<s.length;r++){const{returnData:i,success:l}=s[r],{callData:b}=a[t][r],{abi:D,address:R,functionName:S,args:k}=h[o.length];try{if(b==="0x")throw new B;if(!l)throw new P({data:i});const d=_({abi:D,args:k,data:i,functionName:S});o.push(u?{result:d,status:"success"}:d)}catch(d){const z=E(d,{abi:D,address:R,args:k,docsPath:"/docs/contract/multicall",functionName:S});if(!u)throw z;o.push({error:z,result:void 0,status:"failure"})}}}if(o.length!==h.length)throw new x("multicall results mismatch");return o}export{K as multicall};
