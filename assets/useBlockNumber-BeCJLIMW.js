import{__toESM as f}from"./chunk-DgAfPHQg.js";import{require_react as w}from"./react-CNoFhWkx.js";import{require_jsx_runtime as _}from"./jsx-runtime-D7bMTQeG.js";import{UniverseChainId as u}from"./utils-BX1Fu73x.js";import{RPC_PROVIDERS as N}from"./providers-BELGpWsr.js";import{useEthersProvider as S}from"./useEthersProvider-CBgc_azi.js";import{useAccount as x}from"./useAccount-C5hwiBwN.js";import{atom as h,useAtomValue as E}from"./utils-CDaPKk14.js";import{useIsWindowVisible as M}from"./useIsWindowVisible-CtuFA8fK.js";var n=f(w()),P=f(_());const R=h(void 0),p=Symbol(),b=(0,n.createContext)(p);function V(){const m=(0,n.useContext)(b);if(m===p)throw new Error("BlockNumber hooks must be wrapped in a <BlockNumberProvider>");return m}function L(){return V().block}function W({children:m}){const k=x(),o=E(R)??k.chainId,c=S({chainId:o}),[{chainId:v,block:I,mainnetBlock:a},s]=(0,n.useState)({}),l=v===o?I:void 0,i=(0,n.useCallback)((t,e)=>{s(r=>{if(r.chainId===t){if(!r.block||r.block<e){const B=t===u.Mainnet?e:r.mainnetBlock;return{chainId:t,block:e,mainnetBlock:B}}}else if(t===u.Mainnet&&(!r.mainnetBlock||r.mainnetBlock<e))return{...r,mainnetBlock:e};return r})},[]),d=M();(0,n.useEffect)(()=>{if(c&&o&&d){s(e=>e.chainId!==o?{chainId:o,mainnetBlock:e.mainnetBlock}:e);const t=e=>i(o,e);return c.on("block",t),()=>{c.removeListener("block",t)}}},[c,d,i,o]),(0,n.useEffect)(()=>{N[u.Mainnet].getBlockNumber().then(t=>i(u.Mainnet,t)).catch(()=>{})},[i]);const C=(0,n.useMemo)(()=>({fastForward:t=>{o&&i(o,t)},block:l,mainnetBlock:a}),[l,a,o,i]);return(0,P.jsx)(b.Provider,{value:C,children:m})}export{W as BlockNumberProvider,R as multicallUpdaterSwapChainIdAtom,L as useBlockNumber};
