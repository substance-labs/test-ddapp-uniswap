import{__toESM as C}from"./chunk-DgAfPHQg.js";import{require_react as v}from"./react-CNoFhWkx.js";import{useLocation as _}from"./chunk-QMGIS6GS-B91ZVkXt.js";import{require_jsx_runtime as E}from"./jsx-runtime-D7bMTQeG.js";import{CONNECTION_PROVIDER_IDS as w}from"./useEnabledChains-DuB86c95.js";import{logger as m}from"./hooks-BXO4d1DJ.js";import{InterfaceEventName as y}from"./interface-BdpC4qOF.js";import{UserRejectedRequestError as h}from"./rpc-nQR4Ijs4.js";import{sendAnalyticsEvent as I}from"./send.web-CrSXW2rw.js";import{useMutation as b}from"./connector-Cw8HJLtm.js";import{walletTypeToAmplitudeWalletType as g}from"./embeddedWallet-BdHUTaHg.js";import{deepEqual as D,useConfig as f}from"./useAccount-C5hwiBwN.js";import{ConnectorAlreadyConnectedError as O}from"./config-CDfnfyHL.js";import{useAccountDrawer as P}from"./hooks-CRfHBoLD.js";import{WalletConnectionResult as S}from"./types-DhBONJgE.js";import{getCurrentPageFromLocation as A}from"./urlRoutes-Bn-NftBz.js";async function x(n,e){let t;if(typeof e.connector=="function"?t=n._internal.connectors.setup(e.connector):t=e.connector,t.uid===n.state.current)throw new O;try{var c;n.setState(u=>({...u,status:"connecting"})),t.emitter.emit("message",{type:"connecting"});const{connector:r,...o}=e,i=await t.connect(o),s=i.accounts;return t.emitter.off("connect",n._internal.events.connect),t.emitter.on("change",n._internal.events.change),t.emitter.on("disconnect",n._internal.events.disconnect),await((c=n.storage)===null||c===void 0?void 0:c.setItem("recentConnectorId",t.id)),n.setState(u=>({...u,connections:new Map(u.connections).set(t.uid,{accounts:s,chainId:i.chainId,connector:t}),current:t.uid,status:"connected"})),{accounts:s,chainId:i.chainId}}catch(r){throw n.setState(o=>({...o,status:o.current?"connected":"disconnected"})),r}}let d=[];function l(n){const e=n.connectors;return D(d,e)?d:(d=e,e)}function M(n,e){const{onChange:t}=e;return n._internal.connectors.subscribe((c,r)=>{t(Object.values(c),r)})}function N(n){return{mutationFn(e){return x(n,e)},mutationKey:["connect"]}}var a=C(v());function R(n={}){const e=f(n);return(0,a.useSyncExternalStore)(t=>M(e,{onChange:t}),()=>l(e),()=>l(e))}function T(n={}){const{mutation:e}=n,t=f(n),c=N(t),{mutate:r,mutateAsync:o,...i}=b({...e,...c});return(0,a.useEffect)(()=>t.subscribe(({status:s})=>s,(s,u)=>{u==="connected"&&s==="disconnected"&&i.reset()}),[t,i.reset]),{...i,connect:r,connectAsync:o,connectors:R({config:t})}}var j=C(E());const p=(0,a.createContext)(void 0);function Y({children:n}){const{pathname:e}=_(),t=P(),c=T({mutation:{onMutate({connector:r}){m.debug("useConnect","ConnectionProvider",`Connection activating: ${r.name}`)},onSuccess(r,{connector:o}){m.debug("useConnect","ConnectionProvider",`Connection activated: ${o.name}`),"id"in o&&o.id===w.EMBEDDED_WALLET_CONNECTOR_ID?t.open():t.close()},onError(r,{connector:o}){if(r instanceof h){c.reset();return}m.warn("useConnect","ConnectionProvider",`Connection failed: ${o.name}`),I(y.WalletConnected,{result:S.Failed,wallet_name:o.name,wallet_type:g("type"in o?o.type:void 0),page:A(e),error:r.message})}}});return(0,j.jsx)(p.Provider,{value:c,children:n})}function Z(){const n=(0,a.useContext)(p);if(!n)throw new Error("useConnect must be used within a ConnectionProvider");return n}export{Y as ConnectionProvider,x as connect,l as getConnectors,Z as useConnect,R as useConnectors};
