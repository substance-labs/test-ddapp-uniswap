import{__esm as f,__export as d}from"./chunk-DgAfPHQg.js";import{BigNumber as x,Logger as w,arrayify as s,concat as h,hexlify as y,init_lib as k,init_lib$4 as E,init_lib$5 as A,init_lib$6 as j,init_lib$7 as z,keccak256 as B,toUtf8Bytes as I,zeroPad as c}from"./lib-DPFIyRke.js";import{init_lib as R,sha256 as S}from"./useQuery-D_ZCw8XG.js";var b,L=f({"../../node_modules/@ethersproject/solidity/lib.esm/_version.js"(){b="solidity/5.7.0"}}),N={};d(N,{keccak256:()=>T,pack:()=>a,sha256:()=>P});function m(t,r,e){switch(t){case"address":return e?c(r,32):s(r);case"string":return I(r);case"bytes":return s(r);case"bool":return r=r?"0x01":"0x00",e?c(r,32):s(r)}let n=t.match(u);if(n){let i=parseInt(n[2]||"256");return(n[2]&&String(i)!==n[2]||i%8!==0||i===0||i>256)&&o.throwArgumentError("invalid number type","type",t),e&&(i=256),r=x.from(r).toTwos(i),c(r,i/8)}if(n=t.match(_),n){const i=parseInt(n[1]);return(String(i)!==n[1]||i===0||i>32)&&o.throwArgumentError("invalid bytes type","type",t),s(r).byteLength!==i&&o.throwArgumentError(`invalid value for ${t}`,"value",r),e?s((r+p).substring(0,66)):r}if(n=t.match(l),n&&Array.isArray(r)){const i=n[1];parseInt(n[2]||String(r.length))!=r.length&&o.throwArgumentError(`invalid array length for ${t}`,"value",r);const g=[];return r.forEach(function($){g.push(m(i,$,!0))}),h(g)}return o.throwArgumentError("invalid type","type",t)}function a(t,r){t.length!=r.length&&o.throwArgumentError("wrong number of values; expected ${ types.length }","values",r);const e=[];return t.forEach(function(n,i){e.push(m(n,r[i]))}),y(h(e))}function T(t,r){return B(a(t,r))}function P(t,r){return S(a(t,r))}var _,u,l,p,o,D=f({"../../node_modules/@ethersproject/solidity/lib.esm/index.js"(){A(),j(),E(),R(),k(),z(),L(),_=new RegExp("^bytes([0-9]+)$"),u=new RegExp("^(u?int)([0-9]*)$"),l=new RegExp("^(.*)\\[([0-9]*)\\]$"),p="0000000000000000000000000000000000000000000000000000000000000000",o=new w(b)}});export{D as init_lib,T as keccak256,N as lib_exports,a as pack,P as sha256};
