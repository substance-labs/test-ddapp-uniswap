import{__toESM as a}from"./chunk-DgAfPHQg.js";import{require_react as g}from"./react-CNoFhWkx.js";import"./index.web-BqgtOHN3.js";import"./es-Iwj7vF3u.js";import"./react-dom-xovCOntK.js";import"./react-is-BJXMVkew.js";import"./dist-Q7olfaoJ.js";import"./tslib.es6-Dbpxy1u8.js";import"./dist-QCpUvRkJ.js";import"./jsx-runtime-D7bMTQeG.js";import"./useEnabledChains-DuB86c95.js";import{logger as b}from"./hooks-BXO4d1DJ.js";import"./dist-ceZDlR1V.js";import"./redux-toolkit.esm-BnRUBto_.js";import"./utils-BX1Fu73x.js";import"./bn-D7somgUb.js";import"./lib-DPFIyRke.js";import"./config-C4KrHqHG.js";import"./time-D_OqcZ4M.js";import"./element-Wnp4RkdY.js";import"./isAddress-P2vaZgmG.js";import"./chain-ghiO403o.js";import"./slice-cfC6NcyN.js";import"./node-C_BraYgX.js";import"./formatUnits-DkyMpOD7.js";import"./_u64-b_viZRi_.js";import"./sha2-Jt0E41S_.js";import"./sha256-BqbhXHGu.js";import"./parseAccount-CRyN5swV.js";import"./stringify-B82RFruy.js";import"./rpc-nQR4Ijs4.js";import"./dist-CBK-d0jO.js";import"./hmac-D-QTodfL.js";import"./lib-CKG8APVv.js";import"./hash-05APZTFm.js";import"./inherits_browser-Dqx8HagI.js";import"./useQuery-D_ZCw8XG.js";import"./lib-BncBk3QF.js";import"./lib-Dj-AwQVD.js";import"./configs-B4dDdw82.js";import"./hooks-Bp0VtWbX.js";import"./statsig-B7I9iQRf.js";import"./usePollingIntervalByChain-YBOfXXzb.js";import"./providers-BELGpWsr.js";import"./createTransport-WEDNYdh5.js";import"./useEthersProvider-CBgc_azi.js";import{useAccount as d}from"./useAccount-C5hwiBwN.js";import"./config-CDfnfyHL.js";import"./query-qNZtVuxH.js";import"./utils-CDaPKk14.js";import{fetchedLogs as h,fetchedLogsError as k,fetchingLogs as N,isHistoricalLog as y,keyToFilter as u}from"./slice-CGCdMmTE.js";import{useAppDispatch as v,useAppSelector as B}from"./hooks-Muz170pO.js";import"./useIsWindowVisible-CtuFA8fK.js";import{useBlockNumber as E}from"./useBlockNumber-BeCJLIMW.js";import{useWeb3React as L}from"./web3reactShim-CQtxnXhb.js";var n=a(g());function Ar(){const p=v(),f=B(r=>r.logs),{chainId:i}=d(),{provider:c}=L(),t=E,s=(0,n.useMemo)(()=>{if(!i||typeof t!="number")return[];const r=f[i];return r?Object.keys(r).filter(e=>{const{fetchingBlockNumber:m,results:o,listeners:l}=r[e];return!(l===0||typeof m=="number"&&m>=t||o&&typeof o.blockNumber=="number"&&o.blockNumber>=t||y(u(e),t)&&(o==null?void 0:o.logs)!==void 0)}).map(e=>u(e)):[]},[t,i,f]);return(0,n.useEffect)(()=>{!c||!i||typeof t!="number"||s.length===0||(p(N({chainId:i,filters:s,blockNumber:t})),s.forEach(r=>{let e=r.fromBlock??0,m=r.toBlock??t;typeof e=="string"&&(e=Number.parseInt(e)),typeof m=="string"&&(m=Number.parseInt(m)),c.getLogs({...r,fromBlock:e,toBlock:m}).then(o=>{p(h({chainId:i,filter:r,results:{logs:o,blockNumber:t}}))}).catch(o=>{b.warn("logs/updater","Updater#useEffect","Failed to fetch logs",{error:o,filter:r}),p(k({chainId:i,filter:r,blockNumber:t}))})}))},[t,i,p,s,c]),null}export{Ar as default};
