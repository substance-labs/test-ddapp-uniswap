import{__toESM as v}from"./chunk-DgAfPHQg.js";import{require_react as M}from"./react-CNoFhWkx.js";import{logger as C,tryCatch as D,useEvent as m}from"./hooks-BXO4d1DJ.js";import{Platform as d}from"./utils-BX1Fu73x.js";import{useMutation as E}from"./connector-Cw8HJLtm.js";import{deepEqual as f,useConfig as p}from"./useAccount-C5hwiBwN.js";import{useWallet as y}from"./useWallet-CpLwPvrh.js";async function S(n,t={}){let e;if(t.connector)e=t.connector;else{const{connections:o,current:r}=n.state,a=o.get(r);e=a==null?void 0:a.connector}const c=n.state.connections;e&&(await e.disconnect(),e.emitter.off("change",n._internal.events.change),e.emitter.off("disconnect",n._internal.events.disconnect),e.emitter.on("connect",n._internal.events.connect),c.delete(e.uid)),n.setState(o=>{if(c.size===0)return{...o,connections:new Map,current:null,status:"disconnected"};const r=c.values().next().value;return{...o,connections:new Map(c),current:r.connector.uid}});{var i,s;const o=n.state.current;if(!o)return;const r=(i=n.state.connections.get(o))===null||i===void 0?void 0:i.connector;if(!r)return;await((s=n.storage)===null||s===void 0?void 0:s.setItem("recentConnectorId",r.id))}}let u=[];function l(n){const t=[...n.state.connections.values()];return n.state.status==="reconnecting"||f(u,t)?u:(u=t,t)}function h(n,t){const{onChange:e}=t;return n.subscribe(()=>l(n),e,{equalityFn:f})}function V(n){return{mutationFn(t){return S(n,t)},mutationKey:["disconnect"]}}var w=v(M());function x(n={}){const t=p(n);return(0,w.useSyncExternalStore)(e=>h(t,{onChange:e}),()=>l(t),()=>l(t))}function b(n={}){const{mutation:t}=n,e=p(n),c=V(e),{mutate:i,mutateAsync:s,...o}=E({...t,...c});return{...o,connectors:x({config:e}).map(r=>r.connector),disconnect:i,disconnectAsync:s}}function q(){const{disconnect:n,connectors:t}=b();return m(()=>{t.forEach(e=>n({connector:e}))})}function O(){return y().disconnect}function K(){const n=q(),t=O();return m(()=>{const e={[d.EVM]:n,[d.SVM]:t};for(const[c,i]of Object.entries(e)){const{error:s}=D(i);s&&C.error(s,{tags:{file:"useDisconnect.ts",function:"useDisconnect"},extra:{platform:c}})}})}export{K as useDisconnect};
