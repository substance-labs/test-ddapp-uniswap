import{ApiController as N,ChainController as D,ConnectionController as y,ConnectorController as O,ConstantsUtil as M,ConstantsUtil$2 as v,CoreHelperUtil as f,OptionsController as u,StorageUtil as _}from"./ConstantsUtil-DWdkyivO.js";const b={METMASK_CONNECTOR_NAME:"MetaMask",TRUST_CONNECTOR_NAME:"Trust Wallet",SOLFLARE_CONNECTOR_NAME:"Solflare",PHANTOM_CONNECTOR_NAME:"Phantom",COIN98_CONNECTOR_NAME:"Coin98",MAGIC_EDEN_CONNECTOR_NAME:"Magic Eden",BACKPACK_CONNECTOR_NAME:"Backpack",BITGET_CONNECTOR_NAME:"Bitget Wallet",FRONTIER_CONNECTOR_NAME:"Frontier",XVERSE_CONNECTOR_NAME:"Xverse Wallet",LEATHER_CONNECTOR_NAME:"Leather",EIP155:"eip155",ADD_CHAIN_METHOD:"wallet_addEthereumChain",EIP6963_ANNOUNCE_EVENT:"eip6963:announceProvider",EIP6963_REQUEST_EVENT:"eip6963:requestProvider",CONNECTOR_RDNS_MAP:{coinbaseWallet:"com.coinbase.wallet",coinbaseWalletSDK:"com.coinbase.wallet"},CONNECTOR_TYPE_EXTERNAL:"EXTERNAL",CONNECTOR_TYPE_WALLET_CONNECT:"WALLET_CONNECT",CONNECTOR_TYPE_INJECTED:"INJECTED",CONNECTOR_TYPE_ANNOUNCED:"ANNOUNCED",CONNECTOR_TYPE_AUTH:"AUTH",CONNECTOR_TYPE_MULTI_CHAIN:"MULTI_CHAIN",CONNECTOR_TYPE_W3M_AUTH:"ID_AUTH"},R={getCaipTokens(e){if(!e)return;const o={};return Object.entries(e).forEach(([n,s])=>{o[`${b.EIP155}:${n}`]=s}),o},isLowerCaseMatch(e,o){return(e==null?void 0:e.toLowerCase())===(o==null?void 0:o.toLowerCase())}},A={filterOutDuplicatesByRDNS(e){const o=u.state.enableEIP6963?O.state.connectors:[],n=_.getRecentWallets(),s=o.map(t=>{var i;return(i=t.info)===null||i===void 0?void 0:i.rdns}).filter(Boolean),a=n.map(t=>t.rdns).filter(Boolean),l=s.concat(a);if(l.includes("io.metamask.mobile")&&f.isMobile()){const t=l.indexOf("io.metamask.mobile");l[t]="io.metamask"}return e.filter(t=>!l.includes(String(t==null?void 0:t.rdns)))},filterOutDuplicatesByIds(e){const o=O.state.connectors.filter(t=>t.type==="ANNOUNCED"||t.type==="INJECTED"),n=_.getRecentWallets(),s=o.map(t=>t.explorerId),a=n.map(t=>t.id),l=s.concat(a);return e.filter(t=>!l.includes(t==null?void 0:t.id))},filterOutDuplicateWallets(e){const o=this.filterOutDuplicatesByRDNS(e);return this.filterOutDuplicatesByIds(o)},markWalletsAsInstalled(e){const{connectors:o}=O.state,{featuredWalletIds:n}=u.state,s=o.filter(r=>r.type==="ANNOUNCED").reduce((r,t)=>{var i;return!((i=t.info)===null||i===void 0)&&i.rdns&&(r[t.info.rdns]=!0),r},{});return e.map(r=>({...r,installed:!!r.rdns&&!!s[r.rdns??""]})).sort((r,t)=>{const i=Number(t.installed)-Number(r.installed);if(i!==0)return i;if(n!=null&&n.length){const c=n.indexOf(r.id),E=n.indexOf(t.id);if(c!==-1&&E!==-1)return c-E;if(c!==-1)return-1;if(E!==-1)return 1}return 0})},getConnectOrderMethod(e,o){var n;const s=(e==null?void 0:e.connectMethodsOrder)||((n=u.state.features)===null||n===void 0?void 0:n.connectMethodsOrder),a=o||O.state.connectors;if(s)return s;const{injected:l,announced:r}=T.getConnectorsByType(a,N.state.recommended,N.state.featured),t=l.filter(T.showConnector),i=r.filter(T.showConnector);return t.length||i.length?["wallet","email","social"]:M.DEFAULT_CONNECT_METHOD_ORDER},isExcluded(e){const o=!!e.rdns&&N.state.excludedWallets.some(s=>s.rdns===e.rdns),n=!!e.name&&N.state.excludedWallets.some(s=>R.isLowerCaseMatch(s.name,e.name));return o||n}},T={getConnectorsByType(e,o,n){const{customWallets:s}=u.state,a=_.getRecentWallets(),l=A.filterOutDuplicateWallets(o),r=A.filterOutDuplicateWallets(n),t=e.filter(C=>C.type==="MULTI_CHAIN"),i=e.filter(C=>C.type==="ANNOUNCED"),c=e.filter(C=>C.type==="INJECTED"),E=e.filter(C=>C.type==="EXTERNAL");return{custom:s,recent:a,external:E,multiChain:t,announced:i,injected:c,recommended:l,featured:r}},showConnector(e){var o;const n=(o=e.info)===null||o===void 0?void 0:o.rdns,s=!!n&&N.state.excludedWallets.some(l=>!!l.rdns&&l.rdns===n),a=!!e.name&&N.state.excludedWallets.some(l=>R.isLowerCaseMatch(l.name,e.name));return!(e.type==="INJECTED"&&(e.name==="Browser Wallet"&&(!f.isMobile()||f.isMobile()&&!n&&!y.checkInstalled())||s||a)||(e.type==="ANNOUNCED"||e.type==="EXTERNAL")&&(s||a))},getIsConnectedWithWC(){return Array.from(D.state.chains.values()).some(n=>O.getConnectorId(n.namespace)===v.CONNECTOR_ID.WALLET_CONNECT)},getConnectorTypeOrder({recommended:e,featured:o,custom:n,recent:s,announced:a,injected:l,multiChain:r,external:t,overriddenConnectors:i=(()=>{var c;return(c=u.state.features)===null||c===void 0?void 0:c.connectorTypeOrder})()??[]}){const c=T.getIsConnectedWithWC(),m=[{type:"walletConnect",isEnabled:u.state.enableWalletConnect&&!c},{type:"recent",isEnabled:s.length>0},{type:"injected",isEnabled:[...l,...a,...r].length>0},{type:"featured",isEnabled:o.length>0},{type:"custom",isEnabled:n&&n.length>0},{type:"external",isEnabled:t.length>0},{type:"recommended",isEnabled:e.length>0}].filter(d=>d.isEnabled),W=new Set(m.map(d=>d.type)),p=i.filter(d=>W.has(d)).map(d=>({type:d,isEnabled:!0})),h=m.filter(({type:d})=>!p.some(({type:I})=>I===d));return Array.from(new Set([...p,...h].map(({type:d})=>d)))}};export{T as ConnectorUtil,b as ConstantsUtil,R as HelpersUtil,A as WalletUtil};
