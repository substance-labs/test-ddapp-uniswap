import{__toESM as L}from"./chunk-DgAfPHQg.js";import{require_react as M}from"./react-CNoFhWkx.js";import{useEnabledChains as w}from"./useEnabledChains-DuB86c95.js";import{Percent as y,Token as _,TokenSortableField as g,UniverseChainId as u,V2_FACTORY_ADDRESSES as I,init_jsbi as k,init_sdk_core_esm as N,isL2ChainId as V,jsbi_default as B,toGraphQLChain as O,useTopTokensQuery as z}from"./utils-BX1Fu73x.js";import{L2_DEADLINE_FROM_NOW as j}from"./misc-BMnlqqV4.js";import{computePairAddress as F,init_v2_sdk_esm as H}from"./v2-sdk.esm-CIiDMO7F.js";import{deserializeToken as U,serializeToken as b}from"./currency-DIOEzjz2.js";import{SlippageTolerance as p,addSerializedPair as W,updateUserDeadline as q,updateUserRouterPreference as Y,updateUserSlippageTolerance as x}from"./reducer-26KeQlno.js";import{BTC_BSC as Q,BUSD_BSC as $,DAI as R,DAI_AVALANCHE as G,DAI_BSC as K,ETH_BSC as J,USDC_AVALANCHE as X,USDC_BSC as Z,USDC_MAINNET as v,USDT as T,USDT_AVALANCHE as ee,USDT_BSC as re,WBTC as ne,WETH_AVALANCHE as te,WRAPPED_NATIVE_CURRENCY as oe}from"./objects-DlLkJwrJ.js";import{useGetPositionsForPairs as se}from"./getPositions-B2zd3dQ2.js";import{useSupportedChainId as ie}from"./useSupportedChainId-DskHoisQ.js";import{useAccount as A}from"./useAccount-C5hwiBwN.js";import{useAppDispatch as S,useAppSelector as m}from"./hooks-Muz170pO.js";import{gqlToCurrency as ae}from"./util-BZ6kLG7e.js";N();const C=Object.fromEntries(Object.entries(oe).map(([e,r])=>[e,[r]]).filter(Boolean)),ce={...C,[u.Mainnet]:[...C[u.Mainnet],R,v,T,ne],[u.Bnb]:[...C[u.Bnb],K,Z,re,Q,$,J],[u.Avalanche]:[...C[u.Avalanche],G,X,ee,te]},ue={[u.Mainnet]:[[new _(u.Mainnet,"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643",8,"cDAI","Compound Dai"),new _(u.Mainnet,"0x39AA39c021dfbaE8faC545936693aC917d5E7563",8,"cUSDC","Compound USD Coin")],[v,T],[R,T]]};N();H();k();var a=L(M());function be(){const e=S(),r=m(o=>o.user.userRouterPreference),s=(0,a.useCallback)(o=>{e(Y({userRouterPreference:o}))},[e]);return[r,s]}function de(){const e=m(c=>c.user.userSlippageTolerance),r=(0,a.useMemo)(()=>e===p.Auto?p.Auto:new y(e,1e4),[e]),s=S(),o=(0,a.useCallback)(c=>{let d;try{d=c===p.Auto?p.Auto:B.toNumber(c.multiply(1e4).quotient)}catch{d=p.Auto}s(x({userSlippageTolerance:d}))},[s]);return[r,o]}function Ne(e){const[r]=de();return r===p.Auto?e:r}function Re(){const{chainId:e}=A(),r=S(),s=m(l=>l.user.userDeadline),c=V(e)?j:s,d=(0,a.useCallback)(l=>{r(q({userDeadline:l}))},[r]);return[c,d]}function le(e){return{token0:b(e.token0),token1:b(e.token1)}}function ve(){const e=S();return(0,a.useCallback)(r=>{e(W({serializedPair:le(r)}))},[e])}function Le([e,r]){if(e.chainId!==r.chainId)throw new Error("Not matching chain IDs");if(e.equals(r))throw new Error("Tokens cannot be equal");if(!I[e.chainId])throw new Error("No V2 factory address on this chain");return new _(e.chainId,F({factoryAddress:I[e.chainId],tokenA:e,tokenB:r}),18,"UNI-V2","Uniswap V2")}function Me(){const{chainId:e}=A(),{defaultChainId:r}=w(),s=ie(e),{data:o}=z({variables:{chain:O(s??r),orderBy:g.Popularity,page:1,pageSize:100}}),c=(0,a.useMemo)(()=>e?ue[e]??[]:[],[e]),d=(0,a.useMemo)(()=>e&&(o!=null&&o.topTokens)?o.topTokens.flatMap(t=>{if(!t||!t.address)return[];const n=ae(t);return(ce[e]??[]).map(i=>!(n!=null&&n.isNative)&&i.address===(n==null?void 0:n.address)?null:[i,n]).filter(i=>i!==null)}):[],[o,e]),l=m(({user:{pairs:t}})=>t),h=(0,a.useMemo)(()=>{if(!e||!l)return[];const t=l[e];return t?Object.keys(t).map(n=>[U(t[n].token0),U(t[n].token1)]):[]},[l,e]),D=(0,a.useMemo)(()=>h.concat(d).concat(c),[c,h,d]);return(0,a.useMemo)(()=>{const t=D.reduce((n,[i,f])=>{const E=i.sortsBefore(f),P=E?`${i.address}:${f.address}`:`${f.address}:${i.address}`;return n[P]||(n[P]=E?[i,f]:[f,i]),n},{});return Object.keys(t).map(n=>t[n])},[D])}function we(){const e=m(({user:{pairs:s}})=>s),r=A();return se(e,r.address)}export{Le as toV2LiquidityToken,ve as usePairAdder,we as useRequestPositionsForSavedPairs,be as useRouterPreference,Me as useTrackedTokenPairs,de as useUserSlippageTolerance,Ne as useUserSlippageToleranceWithDefault,Re as useUserTransactionTTL};
