import{uniswapUrls as u}from"./urls-kwiZbYPW.js";import{createApiClient as c}from"./createApiClient-BjXZMbEB.js";const d=t=>Object.entries(t).sort((e,a)=>e[0].localeCompare(a[0])).map(([e,a])=>`${encodeURIComponent(e)}=${encodeURIComponent(a)}`).join("&");async function o({data:t,address:e,signMessage:a}){const n={...t,"x-uni-address":e,"x-uni-timestamp":Date.now()},s=JSON.stringify(n),r=await a(s);return{requestBody:n,signature:r}}async function g({data:t,address:e,signMessage:a}){const n={...t,"x-uni-address":e,"x-uni-timestamp":Date.now()},s=d(n),r=await a(s);return{requestParams:n,signature:r}}const i=c({baseUrl:u.unitagsApiUrl});async function y(t){return await i.get("/username",{params:t})}async function f(t){return await i.get("/address",{params:t})}async function w({data:t,address:e,signMessage:a}){const{requestBody:n,signature:s}=await o({data:t,address:e,signMessage:a});return await i.post("/username",{body:JSON.stringify(n),headers:{"x-uni-sig":s}})}async function l({username:t,data:e,address:a,signMessage:n}){const{requestBody:s,signature:r}=await o({data:e,address:a,signMessage:n});return await i.put(`/username/${t}/metadata`,{body:JSON.stringify(s),headers:{"x-uni-sig":r}})}async function U({data:t,address:e,signMessage:a}){const{requestParams:n,signature:s}=await g({data:t,address:e,signMessage:a});return await i.get("/username/avatar-upload-url",{params:n,headers:{"x-uni-sig":s}})}export{w as claimUnitag,f as fetchAddress,y as fetchUsername,U as getUnitagAvatarUploadUrl,l as updateUnitagMetadata};
