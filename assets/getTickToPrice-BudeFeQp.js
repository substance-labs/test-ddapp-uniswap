import{Price as f,init_jsbi as a,init_sdk_core_esm as _,jsbi_default as e}from"./utils-BX1Fu73x.js";import{init_v4_sdk_esm as u,tickToPrice as T}from"./V3DutchOrderTrade-Cl7yELmp.js";import{TICK_SPACINGS as p,TickMath as m,encodeSqrtRatioX96 as I,init_v3_sdk_esm as l,nearestUsableTick as P,priceToClosestTick as v,tickToPrice as g}from"./v3-sdk.esm-CHH6GWR1.js";import{convertScientificNotationToNumber as h}from"./getCurrencyAmount-vvZpAzIm.js";_();l();a();function R({baseToken:i,quoteToken:t,value:r}){if(!i||!t||!r)return;const o=h(r);if(!o.match(/^\d*\.?\d*$/))return;const[n,c]=o.split("."),s=(c==null?void 0:c.length)??0,d=e.BigInt((n??"")+(c??""));return new f(i,t,e.multiply(e.BigInt(10**s),e.BigInt(10**i.decimals)),e.multiply(d,e.BigInt(10**t.decimals)))}function A({baseToken:i,quoteToken:t,feeAmount:r,value:o}){if(!i||!t||!r||!o)return;const n=R({baseToken:i,quoteToken:t,value:o});if(!n)return;let c;const s=I(n.numerator,n.denominator);return e.greaterThanOrEqual(s,m.MAX_SQRT_RATIO)?c=m.MAX_TICK:e.lessThanOrEqual(s,m.MIN_SQRT_RATIO)?c=m.MIN_TICK:c=v(n),P(c,p[r])}l();u();function B({baseToken:i,quoteToken:t,tick:r}){if(!(!i||!t||typeof r!="number"))return g(i,t,r)}function O({baseCurrency:i,quoteCurrency:t,tick:r}){if(!(!i||!t||typeof r!="number"))return T(i,t,r)}export{B as getTickToPrice,O as getV4TickToPrice,R as tryParsePrice,A as tryParseTick};
