import{__esm as g,__export as ee}from"./chunk-DgAfPHQg.js";import{BigNumber as y,Logger as re,arrayify as Q,concat as te,getAddress as de,hexConcat as J,hexZeroPad as b,hexlify as M,init_lib as K,init_lib$2 as Ge,init_lib$4 as G,init_lib$5 as ze,init_lib$6 as z,init_lib$7 as ne,isHexString as ae,keccak256 as w,toUtf8Bytes as Y,toUtf8CodePoints as qe,toUtf8String as Re}from"./lib-DPFIyRke.js";var we,xe=g({"../../node_modules/@ethersproject/properties/lib.esm/_version.js"(){we="properties/5.7.0"}}),Pe={};ee(Pe,{Description:()=>Be,checkProperties:()=>je,deepCopy:()=>T,defineReadOnly:()=>D,getStatic:()=>Le,resolveProperties:()=>Xe,shallowCopy:()=>X});function D(r,e,t){Object.defineProperty(r,e,{enumerable:!0,value:t,writable:!1})}function Le(r,e){for(let t=0;t<32;t++){if(r[e])return r[e];if(!r.prototype||typeof r.prototype!="object")break;r=Object.getPrototypeOf(r.prototype).constructor}return null}function Xe(r){return pe(this,void 0,void 0,function*(){const e=Object.keys(r).map(n=>{const A=r[n];return Promise.resolve(A).then(o=>({key:n,value:o}))});return(yield Promise.all(e)).reduce((n,A)=>(n[A.key]=A.value,n),{})})}function je(r,e){(!r||typeof r!="object")&&H.throwArgumentError("invalid object","object",r),Object.keys(r).forEach(t=>{e[t]||H.throwArgumentError("invalid object key - "+t,"transaction:"+t,r)})}function X(r){const e={};for(const t in r)e[t]=r[t];return e}function me(r){if(r==null||Ce[typeof r])return!0;if(Array.isArray(r)||typeof r=="object"){if(!Object.isFrozen(r))return!1;const e=Object.keys(r);for(let t=0;t<e.length;t++){let n=null;try{n=r[e[t]]}catch{continue}if(!me(n))return!1}return!0}return H.throwArgumentError(`Cannot deepCopy ${typeof r}`,"object",r)}function We(r){if(me(r))return r;if(Array.isArray(r))return Object.freeze(r.map(e=>T(e)));if(typeof r=="object"){const e={};for(const t in r){const n=r[t];n!==void 0&&D(e,t,T(n))}return e}return H.throwArgumentError(`Cannot deepCopy ${typeof r}`,"object",r)}function T(r){return We(r)}var pe,H,Ce,Be,Ze=g({"../../node_modules/@ethersproject/properties/lib.esm/index.js"(){ne(),xe(),pe=function(r,e,t,n){function A(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function i(f){try{c(n.next(f))}catch(l){s(l)}}function a(f){try{c(n.throw(f))}catch(l){s(l)}}function c(f){f.done?o(f.value):A(f.value).then(i,a)}c((n=n.apply(r,e||[])).next())})},H=new re(we),Ce={bigint:!0,boolean:!0,function:!0,number:!0,string:!0},Be=class{constructor(r){for(const e in r)this[e]=T(r[e])}}}});function Ae(r){return w(Y(r))}var Ee=g({"../../node_modules/@ethersproject/hash/lib.esm/id.js"(){G(),K()}}),ie,ye=g({"../../node_modules/@ethersproject/hash/lib.esm/_version.js"(){ie="hash/5.7.0"}});function De(r){r=atob(r);const e=[];for(let t=0;t<r.length;t++)e.push(r.charCodeAt(t));return Q(e)}function Ve(r){r=Q(r);let e="";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return btoa(e)}var _e=g({"../../node_modules/@ethersproject/base64/lib.esm/base64.js"(){z()}}),$e={};ee($e,{decode:()=>De,encode:()=>Ve});var er=g({"../../node_modules/@ethersproject/base64/lib.esm/index.js"(){_e()}});function Qe(r,e){e==null&&(e=1);const t=[],n=t.forEach,A=function(o,s){n.call(o,function(i){s>0&&Array.isArray(i)?A(i,s-1):t.push(i)})};return A(r,e),t}function rr(r){const e={};for(let t=0;t<r.length;t++){const n=r[t];e[n[0]]=n[1]}return e}function tr(r){let e=0;function t(){return r[e++]<<8|r[e++]}let n=t(),A=1,o=[0,1];for(let d=1;d<n;d++)o.push(A+=t());let s=t(),i=e;e+=s;let a=0,c=0;function f(){return a==0&&(c=c<<8|r[e++],a=8),c>>--a&1}const l=31,v=Math.pow(2,l),m=v>>>1,Ke=m>>1,N=v-1;let p=0;for(let d=0;d<l;d++)p=p<<1|f();let se=[],S=0,U=v;for(;;){let d=Math.floor(((p-S+1)*A-1)/U),B=0,R=n;for(;R-B>1;){let x=B+R>>>1;d<o[x]?R=x:B=x}if(B==0)break;se.push(B);let C=S+Math.floor(U*o[B]/A),E=S+Math.floor(U*o[B+1]/A)-1;for(;((C^E)&m)==0;)p=p<<1&N|f(),C=C<<1&N,E=E<<1&N|1;for(;C&~E&Ke;)p=p&m|p<<1&N>>>1|f(),C=C<<1^m,E=(E^m)<<1|m|1;S=C,U=1+E-C}let k=n-4;return se.map(d=>{switch(d-k){case 3:return k+65792+(r[i++]<<16|r[i++]<<8|r[i++]);case 2:return k+256+(r[i++]<<8|r[i++]);case 1:return k+r[i++];default:return d-1}})}function nr(r){let e=0;return()=>r[e++]}function Ar(r){return nr(tr(r))}function ir(r){return r&1?~r>>1:r>>1}function or(r,e){let t=Array(r);for(let n=0;n<r;n++)t[n]=1+e();return t}function ce(r,e){let t=Array(r);for(let n=0,A=-1;n<r;n++)t[n]=A+=1+e();return t}function sr(r,e){let t=Array(r);for(let n=0,A=0;n<r;n++)t[n]=A+=ir(e());return t}function F(r,e){let t=ce(r(),r),n=r(),A=ce(n,r),o=or(n,r);for(let s=0;s<n;s++)for(let i=0;i<o[s];i++)t.push(A[s]+i);return e?t.map(s=>e[s]):t}function ar(r){let e=[];for(;;){let t=r();if(t==0)break;e.push(fr(t,r))}for(;;){let t=r()-1;if(t<0)break;e.push(ur(t,r))}return rr(Qe(e))}function cr(r){let e=[];for(;;){let t=r();if(t==0)break;e.push(t)}return e}function ve(r,e,t){let n=Array(r).fill(void 0).map(()=>[]);for(let A=0;A<e;A++)sr(r,t).forEach((o,s)=>n[s].push(o));return n}function fr(r,e){let t=1+e(),n=e(),A=cr(e),o=ve(A.length,1+r,e);return Qe(o.map((s,i)=>{const a=s[0],c=s.slice(1);return Array(A[i]).fill(void 0).map((f,l)=>{let v=l*n;return[a+l*t,c.map(m=>m+v)]})}))}function ur(r,e){let t=1+e();return ve(t,1+r,e).map(A=>[A[0],A.slice(1)])}function lr(r){let e=F(r).sort((n,A)=>n-A);return t();function t(){let n=[];for(;;){let c=F(r,e);if(c.length==0)break;n.push({set:new Set(c),node:t()})}n.sort((c,f)=>f.set.size-c.set.size);let A=r(),o=A%3;A=A/3|0;let s=!!(A&1);A>>=1;let i=A==1,a=A==2;return{branches:n,valid:o,fe0f:s,save:i,check:a}}}var Ie=g({"../../node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js"(){}});function gr(){return Ar(De(""))}var hr=g({"../../node_modules/@ethersproject/hash/lib.esm/ens-normalize/include.js"(){er(),Ie()}});function Ye(r){return qe(r)}function dr(r){return r.filter(e=>e!=65039)}function Me(r){for(let e of r.split(".")){let t=Ye(e);try{for(let n=t.lastIndexOf(W)-1;n>=0;n--)if(t[n]!==W)throw new Error("underscore only allowed at start");if(t.length>=4&&t.every(n=>n<128)&&t[2]===j&&t[3]===j)throw new Error("invalid label extension")}catch(n){throw new Error(`Invalid label "${e}": ${n.message}`)}}return r}function wr(r){return Me(mr(r,dr))}function mr(r,e){let t=Ye(r).reverse(),n=[];for(;t.length;){let A=Cr(t);if(A){n.push(...e(A));continue}let o=t.pop();if(Te.has(o)){n.push(o);continue}if(He.has(o))continue;let s=Ne[o];if(s){n.push(...s);continue}throw new Error(`Disallowed codepoint: 0x${o.toString(16).toUpperCase()}`)}return Me(pr(String.fromCodePoint(...n)))}function pr(r){return r.normalize("NFC")}function Cr(r,e){var t;let n=Se,A,o,s=[],i=r.length;for(e&&(e.length=0);i;){let a=r[--i];if(n=(t=n.branches.find(c=>c.set.has(a)))===null||t===void 0?void 0:t.node,!n)break;if(n.save)o=a;else if(n.check&&a===o)break;s.push(a),n.fe0f&&(s.push(65039),i>0&&r[i-1]==65039&&i--),n.valid&&(A=s.slice(),n.valid==2&&A.splice(1,1),e&&e.push(...r.slice(i).reverse()),r.length=i)}return A}var I,Te,He,Ne,Se,j,W,Br=g({"../../node_modules/@ethersproject/hash/lib.esm/ens-normalize/lib.js"(){K(),hr(),Ie(),I=gr(),Te=new Set(F(I)),He=new Set(F(I)),Ne=ar(I),Se=lr(I),j=45,W=95}});function fe(r){if(r.length===0)throw new Error("invalid ENS name; empty component");return r}function q(r){const e=Y(wr(r)),t=[];if(r.length===0)return t;let n=0;for(let A=0;A<e.length;A++)e[A]===46&&(t.push(fe(e.slice(n,A))),n=A+1);if(n>=e.length)throw new Error("invalid ENS name; empty component");return t.push(fe(e.slice(n))),t}function Er(r){return q(r).map(e=>Re(e)).join(".")}function yr(r){try{return q(r).length!==0}catch{}return!1}function Dr(r){typeof r!="string"&&Ue.throwArgumentError("invalid ENS name; not a string","name",r);let e=Z;const t=q(r);for(;t.length;)e=w(te([e,w(t.pop())]));return M(e)}function Qr(r){return M(te(q(r).map(e=>{if(e.length>63)throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");const t=new Uint8Array(e.length+1);return t.set(e,1),t[0]=t.length-1,t})))+"00"}var Ue,Z,vr=g({"../../node_modules/@ethersproject/hash/lib.esm/namehash.js"(){z(),K(),G(),ne(),ye(),Br(),Ue=new re(ie),Z=new Uint8Array(32),Z.fill(0)}});function Ir(r){return typeof r=="string"&&(r=Y(r)),w(te([Y(oe),Y(String(r.length)),r]))}var oe,Yr=g({"../../node_modules/@ethersproject/hash/lib.esm/message.js"(){z(),G(),K(),oe=`Ethereum Signed Message:
`}});function Mr(r){const e=Q(r),t=e.length%32;return t?J([e,V.slice(t)]):M(e)}function ue(r){return function(e){return typeof e!="string"&&u.throwArgumentError(`invalid domain value for ${JSON.stringify(r)}`,`domain.${r}`,e),e}}function P(r){{const e=r.match(/^(u?)int(\d*)$/);if(e){const t=e[1]==="",n=parseInt(e[2]||"256");(n%8!==0||n>256||e[2]&&e[2]!==String(n))&&u.throwArgumentError("invalid numeric width","type",r);const A=Oe.mask(t?n-1:n),o=t?A.add($).mul(ke):_;return function(s){const i=y.from(s);return(i.lt(o)||i.gt(A))&&u.throwArgumentError(`value out-of-bounds for ${r}`,"value",s),b(i.toTwos(256).toHexString(),32)}}}{const e=r.match(/^bytes(\d+)$/);if(e){const t=parseInt(e[1]);return(t===0||t>32||e[1]!==String(t))&&u.throwArgumentError("invalid bytes width","type",r),function(n){return Q(n).length!==t&&u.throwArgumentError(`invalid length for ${r}`,"value",n),Mr(n)}}}switch(r){case"address":return function(e){return b(de(e),32)};case"bool":return function(e){return e?Je:be};case"bytes":return function(e){return w(e)};case"string":return function(e){return Ae(e)}}return null}function le(r,e){return`${r}(${e.map(({name:t,type:n})=>n+" "+t).join(",")})`}var ge,u,V,ke,_,$,Oe,Je,be,L,O,he,Fe,Tr=g({"../../node_modules/@ethersproject/hash/lib.esm/typed-data.js"(){Ge(),ze(),z(),G(),Ze(),ne(),ye(),Ee(),ge=function(r,e,t,n){function A(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function i(f){try{c(n.next(f))}catch(l){s(l)}}function a(f){try{c(n.throw(f))}catch(l){s(l)}}function c(f){f.done?o(f.value):A(f.value).then(i,a)}c((n=n.apply(r,e||[])).next())})},u=new re(ie),V=new Uint8Array(32),V.fill(0),ke=y.from(-1),_=y.from(0),$=y.from(1),Oe=y.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),Je=b($.toHexString(),32),be=b(_.toHexString(),32),L={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},O=["name","version","chainId","verifyingContract","salt"],he={name:ue("name"),version:ue("version"),chainId:function(r){try{return y.from(r).toString()}catch{}return u.throwArgumentError('invalid domain value for "chainId"',"domain.chainId",r)},verifyingContract:function(r){try{return de(r).toLowerCase()}catch{}return u.throwArgumentError('invalid domain value "verifyingContract"',"domain.verifyingContract",r)},salt:function(r){try{const e=Q(r);if(e.length!==32)throw new Error("bad length");return M(e)}catch{}return u.throwArgumentError('invalid domain value "salt"',"domain.salt",r)}},Fe=class h{constructor(e){D(this,"types",Object.freeze(T(e))),D(this,"_encoderCache",{}),D(this,"_types",{});const t={},n={},A={};Object.keys(e).forEach(i=>{t[i]={},n[i]=[],A[i]={}});for(const i in e){const a={};e[i].forEach(c=>{a[c.name]&&u.throwArgumentError(`duplicate variable name ${JSON.stringify(c.name)} in ${JSON.stringify(i)}`,"types",e),a[c.name]=!0;const f=c.type.match(/^([^\x5b]*)(\x5b|$)/)[1];f===i&&u.throwArgumentError(`circular type reference to ${JSON.stringify(f)}`,"types",e),!P(f)&&(n[f]||u.throwArgumentError(`unknown type ${JSON.stringify(f)}`,"types",e),n[f].push(i),t[i][f]=!0)})}const o=Object.keys(n).filter(i=>n[i].length===0);o.length===0?u.throwArgumentError("missing primary type","types",e):o.length>1&&u.throwArgumentError(`ambiguous primary types or unused types: ${o.map(i=>JSON.stringify(i)).join(", ")}`,"types",e),D(this,"primaryType",o[0]);function s(i,a){a[i]&&u.throwArgumentError(`circular type reference to ${JSON.stringify(i)}`,"types",e),a[i]=!0,Object.keys(t[i]).forEach(c=>{n[c]&&(s(c,a),Object.keys(a).forEach(f=>{A[f][c]=!0}))}),delete a[i]}s(this.primaryType,{});for(const i in A){const a=Object.keys(A[i]);a.sort(),this._types[i]=le(i,e[i])+a.map(c=>le(c,e[c])).join("")}}getEncoder(e){let t=this._encoderCache[e];return t||(t=this._encoderCache[e]=this._getEncoder(e)),t}_getEncoder(e){{const A=P(e);if(A)return A}const t=e.match(/^(.*)(\x5b(\d*)\x5d)$/);if(t){const A=t[1],o=this.getEncoder(A),s=parseInt(t[3]);return i=>{s>=0&&i.length!==s&&u.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",i);let a=i.map(o);return this._types[A]&&(a=a.map(w)),w(J(a))}}const n=this.types[e];if(n){const A=Ae(this._types[e]);return o=>{const s=n.map(({name:i,type:a})=>{const c=this.getEncoder(a)(o[i]);return this._types[a]?w(c):c});return s.unshift(A),J(s)}}return u.throwArgumentError(`unknown type: ${e}`,"type",e)}encodeType(e){const t=this._types[e];return t||u.throwArgumentError(`unknown type: ${JSON.stringify(e)}`,"name",e),t}encodeData(e,t){return this.getEncoder(e)(t)}hashStruct(e,t){return w(this.encodeData(e,t))}encode(e){return this.encodeData(this.primaryType,e)}hash(e){return this.hashStruct(this.primaryType,e)}_visit(e,t,n){if(P(e))return n(e,t);const A=e.match(/^(.*)(\x5b(\d*)\x5d)$/);if(A){const s=A[1],i=parseInt(A[3]);return i>=0&&t.length!==i&&u.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",t),t.map(a=>this._visit(s,a,n))}const o=this.types[e];return o?o.reduce((s,{name:i,type:a})=>(s[i]=this._visit(a,t[i],n),s),{}):u.throwArgumentError(`unknown type: ${e}`,"type",e)}visit(e,t){return this._visit(this.primaryType,e,t)}static from(e){return new h(e)}static getPrimaryType(e){return h.from(e).primaryType}static hashStruct(e,t,n){return h.from(t).hashStruct(e,n)}static hashDomain(e){const t=[];for(const n in e){const A=L[n];A||u.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(n)}`,"domain",e),t.push({name:n,type:A})}return t.sort((n,A)=>O.indexOf(n.name)-O.indexOf(A.name)),h.hashStruct("EIP712Domain",{EIP712Domain:t},e)}static encode(e,t,n){return J(["0x1901",h.hashDomain(e),h.from(t).hash(n)])}static hash(e,t,n){return w(h.encode(e,t,n))}static resolveNames(e,t,n,A){return ge(this,void 0,void 0,function*(){e=X(e);const o={};e.verifyingContract&&!ae(e.verifyingContract,20)&&(o[e.verifyingContract]="0x");const s=h.from(t);s.visit(n,(i,a)=>(i==="address"&&!ae(a,20)&&(o[a]="0x"),a));for(const i in o)o[i]=yield A(i);return e.verifyingContract&&o[e.verifyingContract]&&(e.verifyingContract=o[e.verifyingContract]),n=s.visit(n,(i,a)=>i==="address"&&o[a]?o[a]:a),{domain:e,value:n}})}static getPayload(e,t,n){h.hashDomain(e);const A={},o=[];O.forEach(a=>{const c=e[a];c!=null&&(A[a]=he[a](c),o.push({name:a,type:L[a]}))});const s=h.from(t),i=X(t);return i.EIP712Domain?u.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",t):i.EIP712Domain=o,s.encode(n),{types:i,domain:A,primaryType:s.primaryType,message:s.visit(n,(a,c)=>{if(a.match(/^bytes(\d*)/))return M(Q(c));if(a.match(/^u?int/))return y.from(c).toString();switch(a){case"address":return c.toLowerCase();case"bool":return!!c;case"string":return typeof c!="string"&&u.throwArgumentError("invalid string","value",c),c}return u.throwArgumentError("unsupported type","type",a)})}}}}}),Hr={};ee(Hr,{_TypedDataEncoder:()=>Fe,dnsEncode:()=>Qr,ensNormalize:()=>Er,hashMessage:()=>Ir,id:()=>Ae,isValidName:()=>yr,messagePrefix:()=>oe,namehash:()=>Dr});var Ur=g({"../../node_modules/@ethersproject/hash/lib.esm/index.js"(){Ee(),vr(),Yr(),Tr()}});export{Be as Description,Fe as TypedDataEncoder,je as checkProperties,De as decode,T as deepCopy,D as defineReadOnly,Qr as dnsEncode,Ve as encode,Le as getStatic,Ir as hashMessage,Ae as id,Ur as init_lib,er as init_lib$1,Ze as init_lib$2,yr as isValidName,Hr as lib_exports,$e as lib_exports$1,Pe as lib_exports$2,Dr as namehash,Xe as resolveProperties,X as shallowCopy};
